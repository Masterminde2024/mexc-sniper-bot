{
  "name": "mexc-sniper-bot",
  "version": "0.1.0",
  "description": "AI-powered MEXC cryptocurrency trading bot with pattern detection and automated execution",
  "scripts": {
    "postinstall": "patch-package && ./scripts/safe-migrate.sh",
    "dev": "next dev -p 3008",
    "dev:turbo": "next dev --turbopack -p 3008",
    "build": "next build",
    "start": "next start",
    "lint": "biome check --write",
    "lint:check": "biome check",
    "format": "biome format --write",
    "format:check": "biome format",
    "setup:turso": "./scripts/setup-turso.sh",
    "lint:all": "./scripts/lint-and-format.sh",
    "type-check": "tsc --noEmit",
    "// ===== UNIFIED TESTING FRAMEWORK =====": "",
    "test": "vitest run --config=vitest.config.unified.js",
    "test:unit": "vitest run tests/unit/ --config=vitest.config.unified.js",
    "test:integration": "vitest run tests/integration/ --config=vitest.config.unified.js",
    "test:watch": "vitest --watch --config=vitest.config.unified.js",
    "test:ui": "vitest --ui --config=vitest.config.unified.js",
    "test:coverage": "vitest run --coverage --config=vitest.config.unified.js",
    "// ===== AI-POWERED E2E TESTING =====": "",
    "test:e2e": "playwright test tests/e2e/stagehand-*.spec.ts --config=stagehand.config.unified.ts",
    "test:e2e:auth": "playwright test tests/e2e/stagehand-auth-complete.spec.ts --config=stagehand.config.unified.ts",
    "test:e2e:dashboard": "playwright test tests/e2e/stagehand-dashboard-enhanced.spec.ts --config=stagehand.config.unified.ts",
    "test:e2e:journey": "playwright test tests/e2e/stagehand-user-journey.spec.ts --config=stagehand.config.unified.ts",
    "test:e2e:headed": "STAGEHAND_HEADLESS=false playwright test tests/e2e/stagehand-*.spec.ts --config=stagehand.config.unified.ts",
    "test:e2e:debug": "STAGEHAND_VERBOSE=true STAGEHAND_DEBUG_DOM=true playwright test tests/e2e/stagehand-*.spec.ts --config=stagehand.config.unified.ts",
    "// ===== LEGACY E2E TESTING =====": "",
    "test:e2e:legacy": "playwright test tests/e2e/ --ignore=tests/e2e/stagehand-*.spec.ts",
    "test:e2e:legacy:ui": "playwright test tests/e2e/ --ignore=tests/e2e/stagehand-*.spec.ts --ui",
    "test:e2e:legacy:report": "playwright show-report",
    "// ===== COMPREHENSIVE TEST SUITES =====": "",
    "test:all": "npm run test:unit && npm run test:integration && npm run test:e2e",
    "test:all:parallel": "npm run test & npm run test:e2e & wait",
    "test:smoke": "npm run test:unit && npm run test:e2e:auth",
    "test:full": "npm run test:coverage && npm run test:e2e && npm run test:e2e:legacy",
    "// ===== CI/CD OPTIMIZED =====": "",
    "test:ci": "vitest run --reporter=github-actions --coverage --config=vitest.config.unified.js",
    "test:e2e:ci": "CI=true playwright test tests/e2e/stagehand-*.spec.ts --reporter=github --config=stagehand.config.unified.ts",
    "test:ci:full": "npm run test:ci && npm run test:e2e:ci",
    "// ===== PERFORMANCE & BENCHMARKING =====": "",
    "test:perf": "vitest run --reporter=verbose --logHeapUsage --config=vitest.config.unified.js",
    "test:benchmark": "vitest bench --config=vitest.config.unified.js",
    "// ===== LEGACY SCRIPTS (DEPRECATED) =====": "",
    "test:run": "./run-unit-tests.sh",
    "test:stagehand": "echo 'DEPRECATED: Use test:e2e instead'",
    "test:stagehand:auth": "echo 'DEPRECATED: Use test:e2e:auth instead'",
    "test:stagehand:dashboard": "echo 'DEPRECATED: Use test:e2e:dashboard instead'",
    "test:stagehand:patterns": "echo 'DEPRECATED: Pattern tests moved to test:e2e'",
    "test:stagehand:api": "echo 'DEPRECATED: API tests moved to test:integration'",
    "test:stagehand:integration": "echo 'DEPRECATED: Use test:e2e:journey instead'",
    "test:stagehand:headed": "echo 'DEPRECATED: Use test:e2e:headed instead'",
    "test:stagehand:ui": "echo 'DEPRECATED: Use test:e2e:debug instead'",
    "test:stagehand:ci": "echo 'DEPRECATED: Use test:e2e:ci instead'",
    "// ===== BUNDLE OPTIMIZATION & ANALYSIS =====": "",
    "analyze": "ANALYZE=true npm run build",
    "analyze:server": "BUNDLE_ANALYZE=server npm run build",
    "analyze:browser": "BUNDLE_ANALYZE=browser npm run build",
    "build:production": "NODE_ENV=production npm run build",
    "build:analyze": "npm run analyze && npm run build:production",
    "// ===== DEVELOPMENT & MAINTENANCE =====": "",
    "pre-commit": "bun run lint:all && bun run type-check && bun run test:smoke",
    "ci:quality": "bun run lint:check && bun run format:check && bun run type-check",
    "ci:test": "bun run test:ci:full",
    "ci:build": "bun run build",
    "db:generate": "drizzle-kit generate",
    "db:migrate": "drizzle-kit migrate",
    "db:migrate:safe": "./scripts/safe-migrate.sh",
    "db:migrate:fk": "bun run src/db/migrations/safe-foreign-key-migration.ts",
    "db:verify:fk": "bun run src/db/migrations/verify-foreign-keys.ts",
    "db:studio": "drizzle-kit studio",
    "db:reset": "rm -f mexc_sniper.db && bun run db:migrate",
    "db:check": "tsx scripts/check-db.ts",
    "db:diagnostic": "tsx scripts/database-health-diagnostic.ts",
    "db:optimize": "tsx scripts/optimize-sqlite-database.ts",
    "db:setup:turso": "tsx scripts/setup-turso-database.ts",
    "agents:test": "bun test src/mexc-agents/**/*.test.ts",
    "agents:health": "bun run src/mexc-agents/health-check.ts"
  },
  "dependencies": {
    "@browserbasehq/stagehand": "^2.3.0",
    "@kinde-oss/kinde-auth-nextjs": "^2.7.0",
    "@libsql/client": "^0.15.8",
    "@radix-ui/react-avatar": "^1.1.10",
    "@radix-ui/react-checkbox": "^1.3.2",
    "@radix-ui/react-dialog": "^1.1.14",
    "@radix-ui/react-dropdown-menu": "^2.1.15",
    "@radix-ui/react-label": "^2.1.7",
    "@radix-ui/react-navigation-menu": "^1.2.13",
    "@radix-ui/react-progress": "^1.1.7",
    "@radix-ui/react-scroll-area": "^1.2.9",
    "@radix-ui/react-select": "^2.2.5",
    "@radix-ui/react-separator": "^1.1.7",
    "@radix-ui/react-slot": "^1.2.3",
    "@radix-ui/react-switch": "^1.2.5",
    "@radix-ui/react-tabs": "^1.1.12",
    "@radix-ui/react-toggle": "^1.1.9",
    "@radix-ui/react-toggle-group": "^1.1.10",
    "@radix-ui/react-tooltip": "^1.2.7",
    "@tanstack/react-query": "^5.80.6",
    "@tanstack/react-query-devtools": "^5.80.6",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "critters": "^0.0.23",
    "date-fns": "^4.1.0",
    "dotenv": "^16.5.0",
    "drizzle-kit": "^0.31.1",
    "drizzle-orm": "^0.44.2",
    "drizzle-zod": "^0.8.2",
    "inngest": "^3.38.0",
    "lucide-react": "^0.514.0",
    "next": "15.3.3",
    "openai": "^5.1.1",
    "react": "^19.0.0",
    "react-day-picker": "^9.7.0",
    "react-dom": "^19.0.0",
    "recharts": "^2.15.3",
    "sonner": "^2.0.5",
    "tailwind-merge": "^3.3.0",
    "zod": "^3.25.64"
  },
  "engines": {
    "node": ">=20.11.0",
    "npm": ">=10.0.0"
  },
  "devDependencies": {
    "@biomejs/biome": "^1.9.4",
    "@next/bundle-analyzer": "^15.3.3",
    "@playwright/test": "^1.52.0",
    "@tailwindcss/postcss": "^4.1.10",
    "@testing-library/jest-dom": "^6.6.3",
    "@types/better-sqlite3": "^7.6.13",
    "@types/node": "^20",
    "@types/react": "^19",
    "@types/react-dom": "^19",
    "@vitest/ui": "^3.2.2",
    "autoprefixer": "^10.4.21",
    "better-sqlite3": "^11.10.0",
    "jsdom": "^26.1.0",
    "lightningcss": "^1.30.1",
    "null-loader": "^4.0.1",
    "patch-package": "^8.0.0",
    "postinstall-postinstall": "^2.1.0",
    "tailwindcss": "^4.1.10",
    "tsx": "^4.20.3",
    "typescript": "^5",
    "vitest": "^3.2.2"
  },
  "optionalDependencies": {
    "@libsql/linux-x64-gnu": "^0.5.13"
  }
}
