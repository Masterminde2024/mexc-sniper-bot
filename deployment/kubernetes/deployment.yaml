apiVersion: apps/v1
kind: Deployment
metadata:
  name: mexc-sniper-bot
  namespace: trading
  labels:
    app: mexc-sniper-bot
    version: v1.0.0
    component: trading-bot
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: mexc-sniper-bot
  template:
    metadata:
      labels:
        app: mexc-sniper-bot
        version: v1.0.0
    spec:
      serviceAccountName: mexc-sniper-bot
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      containers:
      - name: mexc-sniper-bot
        image: myorg/mexc-sniper-bot:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3000"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: mexc-sniper-secrets
              key: database-url
        - name: MEXC_API_KEY
          valueFrom:
            secretKeyRef:
              name: mexc-sniper-secrets
              key: mexc-api-key
        - name: MEXC_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: mexc-sniper-secrets
              key: mexc-secret-key
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: mexc-sniper-secrets
              key: openai-api-key
        - name: KINDE_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: mexc-sniper-secrets
              key: kinde-client-id
        - name: KINDE_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: mexc-sniper-secrets
              key: kinde-client-secret
        - name: KINDE_ISSUER_URL
          valueFrom:
            secretKeyRef:
              name: mexc-sniper-secrets
              key: kinde-issuer-url
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: http
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: config
        configMap:
          name: mexc-sniper-config
      - name: logs
        emptyDir: {}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  name: mexc-sniper-bot-service
  namespace: trading
  labels:
    app: mexc-sniper-bot
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app: mexc-sniper-bot

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mexc-sniper-bot
  namespace: trading
  labels:
    app: mexc-sniper-bot

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mexc-sniper-config
  namespace: trading
  labels:
    app: mexc-sniper-bot
data:
  auto-sniping.yaml: |
    enabled: false
    maxConcurrentPositions: 3
    patternDetectionInterval: 30000
    safetyCheckInterval: 60000
    confidenceThreshold: 75
    maxPositionSize: 0.10
    stopLossPercentage: 0.15
    strategy: conservative
    paperTradingMode: true
  
  monitoring.yaml: |
    healthCheckInterval: 30000
    metricsCollection: true
    alerting:
      enabled: true
      channels:
        - slack
        - email
    
  safety.yaml: |
    emergencyStopEnabled: true
    riskManagement:
      maxPortfolioRisk: 0.20
      flashCrashProtection: true
      circuitBreakerEnabled: true