{
  "numTotalTestSuites": 224,
  "numPassedTestSuites": 216,
  "numFailedTestSuites": 8,
  "numPendingTestSuites": 0,
  "numTotalTests": 473,
  "numPassedTests": 467,
  "numFailedTests": 4,
  "numPendingTests": 2,
  "numTodoTests": 0,
  "snapshot": {
    "added": 0,
    "failure": false,
    "filesAdded": 0,
    "filesRemoved": 0,
    "filesRemovedList": [],
    "filesUnmatched": 0,
    "filesUpdated": 0,
    "matched": 0,
    "total": 0,
    "unchecked": 0,
    "uncheckedKeysByFile": [],
    "unmatched": 0,
    "updated": 0,
    "didUpdate": false
  },
  "startTime": 1750153216950,
  "success": false,
  "testResults": [
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Agent System Integration", "BaseAgent functionality"],
          "fullName": "Agent System Integration BaseAgent functionality should create agent with proper configuration",
          "status": "passed",
          "title": "should create agent with proper configuration",
          "duration": 0.6399999999999864,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Agent System Integration", "BaseAgent functionality"],
          "fullName": "Agent System Integration BaseAgent functionality should validate agent initialization parameters",
          "status": "passed",
          "title": "should validate agent initialization parameters",
          "duration": 0.5077079999999796,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Agent System Integration", "Agent communication patterns"],
          "fullName": "Agent System Integration Agent communication patterns should format AI requests properly",
          "status": "passed",
          "title": "should format AI requests properly",
          "duration": 0.4872500000000173,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Agent System Integration", "Agent communication patterns"],
          "fullName": "Agent System Integration Agent communication patterns should parse AI responses correctly",
          "status": "passed",
          "title": "should parse AI responses correctly",
          "duration": 0.12483299999996689,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Agent System Integration", "Multi-agent orchestration"],
          "fullName": "Agent System Integration Multi-agent orchestration should handle agent workflow sequencing",
          "status": "passed",
          "title": "should handle agent workflow sequencing",
          "duration": 0.3356660000000602,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Agent System Integration", "Multi-agent orchestration"],
          "fullName": "Agent System Integration Multi-agent orchestration should handle agent failures gracefully",
          "status": "passed",
          "title": "should handle agent failures gracefully",
          "duration": 0.1624580000000151,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Agent System Integration", "Data validation in agent pipeline"],
          "fullName": "Agent System Integration Data validation in agent pipeline should validate calendar data structure",
          "status": "passed",
          "title": "should validate calendar data structure",
          "duration": 0.19162500000004457,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Agent System Integration", "Data validation in agent pipeline"],
          "fullName": "Agent System Integration Data validation in agent pipeline should validate pattern analysis results",
          "status": "passed",
          "title": "should validate pattern analysis results",
          "duration": 0.11058400000001711,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1750153232717,
      "endTime": 1750153232720.1106,
      "status": "passed",
      "message": "",
      "name": "/Users/neo/Developer/mexc-sniper-bot/tests/integration/agent-system.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Cache-Agent Integration", "Agent Response Caching"],
          "fullName": "Cache-Agent Integration Agent Response Caching should cache agent responses automatically",
          "status": "passed",
          "title": "should cache agent responses automatically",
          "duration": 2.603207999999995,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Cache-Agent Integration", "Agent Response Caching"],
          "fullName": "Cache-Agent Integration Agent Response Caching should handle different cache priorities for different agents",
          "status": "passed",
          "title": "should handle different cache priorities for different agents",
          "duration": 0.744083000000046,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Cache-Agent Integration", "Agent Response Caching"],
          "fullName": "Cache-Agent Integration Agent Response Caching should invalidate cache when dependencies change",
          "status": "passed",
          "title": "should invalidate cache when dependencies change",
          "duration": 0.8025829999999132,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Cache-Agent Integration", "Agent Response Caching"],
          "fullName": "Cache-Agent Integration Agent Response Caching should track execution time improvements from caching",
          "status": "passed",
          "title": "should track execution time improvements from caching",
          "duration": 0.3937499999999545,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Cache-Agent Integration", "Cache Analytics for Agents"],
          "fullName": "Cache-Agent Integration Cache Analytics for Agents should track agent cache performance",
          "status": "passed",
          "title": "should track agent cache performance",
          "duration": 1.0213749999999209,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Cache-Agent Integration", "Cache Analytics for Agents"],
          "fullName": "Cache-Agent Integration Cache Analytics for Agents should provide agent-specific recommendations",
          "status": "passed",
          "title": "should provide agent-specific recommendations",
          "duration": 0.7340409999999338,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Cache-Agent Integration", "Cache Analytics for Agents"],
          "fullName": "Cache-Agent Integration Cache Analytics for Agents should monitor cache health for agents",
          "status": "passed",
          "title": "should monitor cache health for agents",
          "duration": 0.32933300000001964,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Cache-Agent Integration", "Workflow Result Caching"],
          "fullName": "Cache-Agent Integration Workflow Result Caching should cache workflow results",
          "status": "passed",
          "title": "should cache workflow results",
          "duration": 0.3624170000000504,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Cache-Agent Integration", "Workflow Result Caching"],
          "fullName": "Cache-Agent Integration Workflow Result Caching should invalidate workflow cache when dependencies change",
          "status": "passed",
          "title": "should invalidate workflow cache when dependencies change",
          "duration": 0.38170800000000327,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Cache-Agent Integration", "Cache Performance Monitoring"],
          "fullName": "Cache-Agent Integration Cache Performance Monitoring should monitor cache performance in real-time",
          "status": "passed",
          "title": "should monitor cache performance in real-time",
          "duration": 0.7382499999999936,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Cache-Agent Integration", "Cache Performance Monitoring"],
          "fullName": "Cache-Agent Integration Cache Performance Monitoring should generate cache optimization recommendations",
          "status": "passed",
          "title": "should generate cache optimization recommendations",
          "duration": 1.2899169999999458,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Cache-Agent Integration", "Cache Performance Monitoring"],
          "fullName": "Cache-Agent Integration Cache Performance Monitoring should optimize cache automatically when needed",
          "status": "passed",
          "title": "should optimize cache automatically when needed",
          "duration": 0.8785839999999325,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Cache-Agent Integration",
            "Cache Integration with Agent Error Handling"
          ],
          "fullName": "Cache-Agent Integration Cache Integration with Agent Error Handling should handle agent errors without breaking cache",
          "status": "passed",
          "title": "should handle agent errors without breaking cache",
          "duration": 1.2601250000000164,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Cache-Agent Integration",
            "Cache Integration with Agent Error Handling"
          ],
          "fullName": "Cache-Agent Integration Cache Integration with Agent Error Handling should not cache error responses",
          "status": "passed",
          "title": "should not cache error responses",
          "duration": 0.46470799999997325,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Cache-Agent Integration", "Memory Management"],
          "fullName": "Cache-Agent Integration Memory Management should manage memory usage effectively",
          "status": "passed",
          "title": "should manage memory usage effectively",
          "duration": 2.9564169999999876,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Cache-Agent Integration", "Memory Management"],
          "fullName": "Cache-Agent Integration Memory Management should cleanup expired cache entries",
          "status": "passed",
          "title": "should cleanup expired cache entries",
          "duration": 152.443625,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Cache-Agent Integration", "Performance Benchmarks"],
          "fullName": "Cache-Agent Integration Performance Benchmarks should demonstrate caching effectiveness",
          "status": "passed",
          "title": "should demonstrate caching effectiveness",
          "duration": 0.7132909999999129,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Cache-Agent Integration", "Performance Benchmarks"],
          "fullName": "Cache-Agent Integration Performance Benchmarks should maintain good hit rates under concurrent load",
          "status": "passed",
          "title": "should maintain good hit rates under concurrent load",
          "duration": 1.4694160000000238,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1750153227543,
      "endTime": 1750153227712.4695,
      "status": "passed",
      "message": "",
      "name": "/Users/neo/Developer/mexc-sniper-bot/tests/integration/cache-agent-integration.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Multi-Phase Trading System Integration",
            "End-to-End Strategy Lifecycle"
          ],
          "fullName": "Multi-Phase Trading System Integration End-to-End Strategy Lifecycle should create and execute a complete multi-phase strategy",
          "status": "passed",
          "title": "should create and execute a complete multi-phase strategy",
          "duration": 7877.575208,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Multi-Phase Trading System Integration",
            "End-to-End Strategy Lifecycle"
          ],
          "fullName": "Multi-Phase Trading System Integration End-to-End Strategy Lifecycle should handle partial execution and resume correctly",
          "status": "passed",
          "title": "should handle partial execution and resume correctly",
          "duration": 5711.417083,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Multi-Phase Trading System Integration",
            "Multi-Component Integration"
          ],
          "fullName": "Multi-Phase Trading System Integration Multi-Component Integration should integrate TradingStrategyManager with MultiPhaseExecutor",
          "status": "passed",
          "title": "should integrate TradingStrategyManager with MultiPhaseExecutor",
          "duration": 1075.8253750000003,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Multi-Phase Trading System Integration",
            "Multi-Component Integration"
          ],
          "fullName": "Multi-Phase Trading System Integration Multi-Component Integration should integrate AdvancedTradingStrategy with MultiPhaseTradingBot",
          "status": "passed",
          "title": "should integrate AdvancedTradingStrategy with MultiPhaseTradingBot",
          "duration": 355.06904100000247,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Multi-Phase Trading System Integration",
            "Multi-Component Integration"
          ],
          "fullName": "Multi-Phase Trading System Integration Multi-Component Integration should persist and restore complex trading scenarios",
          "status": "passed",
          "title": "should persist and restore complex trading scenarios",
          "duration": 7539.774834,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Multi-Phase Trading System Integration",
            "Error Handling and Recovery"
          ],
          "fullName": "Multi-Phase Trading System Integration Error Handling and Recovery should handle database errors gracefully",
          "status": "passed",
          "title": "should handle database errors gracefully",
          "duration": 1075.8707079999986,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Multi-Phase Trading System Integration",
            "Error Handling and Recovery"
          ],
          "fullName": "Multi-Phase Trading System Integration Error Handling and Recovery should validate data integrity across components",
          "status": "passed",
          "title": "should validate data integrity across components",
          "duration": 361.9938750000001,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Multi-Phase Trading System Integration",
            "Performance and Scalability"
          ],
          "fullName": "Multi-Phase Trading System Integration Performance and Scalability should handle multiple concurrent strategy executions",
          "status": "passed",
          "title": "should handle multiple concurrent strategy executions",
          "duration": 353.96162500000355,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Multi-Phase Trading System Integration",
            "Performance and Scalability"
          ],
          "fullName": "Multi-Phase Trading System Integration Performance and Scalability should efficiently handle large numbers of phase executions",
          "status": "passed",
          "title": "should efficiently handle large numbers of phase executions",
          "duration": 368.92020799999955,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1750153225162,
      "endTime": 1750153249882.9202,
      "status": "passed",
      "message": "",
      "name": "/Users/neo/Developer/mexc-sniper-bot/tests/integration/multi-phase-system.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Transaction Lock Integration Tests (Standalone)",
            "Trade API with Lock Protection"
          ],
          "fullName": "Transaction Lock Integration Tests (Standalone) Trade API with Lock Protection should prevent duplicate trades with same parameters",
          "status": "passed",
          "title": "should prevent duplicate trades with same parameters",
          "duration": 372.745625,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Transaction Lock Integration Tests (Standalone)",
            "Trade API with Lock Protection"
          ],
          "fullName": "Transaction Lock Integration Tests (Standalone) Trade API with Lock Protection should allow different trades to execute concurrently",
          "status": "passed",
          "title": "should allow different trades to execute concurrently",
          "duration": 362.7947909999998,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Transaction Lock Integration Tests (Standalone)", "Lock Monitoring"],
          "fullName": "Transaction Lock Integration Tests (Standalone) Lock Monitoring should return lock status information",
          "status": "passed",
          "title": "should return lock status information",
          "duration": 1803.7540000000004,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Transaction Lock Integration Tests (Standalone)", "Lock Monitoring"],
          "fullName": "Transaction Lock Integration Tests (Standalone) Lock Monitoring should check specific resource lock status",
          "status": "failed",
          "title": "should check specific resource lock status",
          "duration": 2144.084833,
          "failureMessages": [
            "AssertionError: expected false to be true // Object.is equality\n    at /Users/neo/Developer/mexc-sniper-bot/tests/integration/transaction-lock-integration-standalone.test.ts:99:25\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at file:///Users/neo/Developer/mexc-sniper-bot/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20"
          ],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Transaction Lock Integration Tests (Standalone)",
            "Emergency Lock Release"
          ],
          "fullName": "Transaction Lock Integration Tests (Standalone) Emergency Lock Release should allow force release of locks by owner",
          "status": "failed",
          "title": "should allow force release of locks by owner",
          "duration": 2872.2411250000005,
          "failureMessages": [
            "AssertionError: expected false to be true // Object.is equality\n    at /Users/neo/Developer/mexc-sniper-bot/tests/integration/transaction-lock-integration-standalone.test.ts:140:29\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at file:///Users/neo/Developer/mexc-sniper-bot/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20"
          ],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Transaction Lock Integration Tests (Standalone)",
            "Queue Priority Testing"
          ],
          "fullName": "Transaction Lock Integration Tests (Standalone) Queue Priority Testing should add items to queue when resource is locked",
          "status": "failed",
          "title": "should add items to queue when resource is locked",
          "duration": 6420.249791,
          "failureMessages": [
            "AssertionError: expected true to be false // Object.is equality\n    at /Users/neo/Developer/mexc-sniper-bot/tests/integration/transaction-lock-integration-standalone.test.ts:193:34\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at file:///Users/neo/Developer/mexc-sniper-bot/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20"
          ],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Transaction Lock Integration Tests (Standalone)",
            "Performance Under Load"
          ],
          "fullName": "Transaction Lock Integration Tests (Standalone) Performance Under Load should handle multiple concurrent requests gracefully",
          "status": "passed",
          "title": "should handle multiple concurrent requests gracefully",
          "duration": 9275.939332999998,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1750153220628,
      "endTime": 1750153243879.9395,
      "status": "failed",
      "message": "",
      "name": "/Users/neo/Developer/mexc-sniper-bot/tests/integration/transaction-lock-integration-standalone.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Transaction Lock Integration Tests",
            "Trade API with Lock Protection"
          ],
          "fullName": "Transaction Lock Integration Tests Trade API with Lock Protection should prevent duplicate trades with same parameters",
          "status": "passed",
          "title": "should prevent duplicate trades with same parameters",
          "duration": 7.455207999999857,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Transaction Lock Integration Tests",
            "Trade API with Lock Protection"
          ],
          "fullName": "Transaction Lock Integration Tests Trade API with Lock Protection should allow different trades to execute concurrently",
          "status": "passed",
          "title": "should allow different trades to execute concurrently",
          "duration": 1.7410420000001068,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Transaction Lock Integration Tests", "Lock Monitoring API"],
          "fullName": "Transaction Lock Integration Tests Lock Monitoring API should return lock status information",
          "status": "passed",
          "title": "should return lock status information",
          "duration": 1.2174589999999625,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Transaction Lock Integration Tests", "Lock Monitoring API"],
          "fullName": "Transaction Lock Integration Tests Lock Monitoring API should check specific resource lock status",
          "status": "passed",
          "title": "should check specific resource lock status",
          "duration": 1.0545000000001892,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Transaction Lock Integration Tests", "Emergency Lock Release"],
          "fullName": "Transaction Lock Integration Tests Emergency Lock Release should allow force release of locks by owner",
          "status": "passed",
          "title": "should allow force release of locks by owner",
          "duration": 1.0889999999999418,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Transaction Lock Integration Tests", "Queue Priority Testing"],
          "fullName": "Transaction Lock Integration Tests Queue Priority Testing should prioritize SELL orders over BUY orders",
          "status": "passed",
          "title": "should prioritize SELL orders over BUY orders",
          "duration": 1.1131249999998545,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Transaction Lock Integration Tests", "Performance Under Load"],
          "fullName": "Transaction Lock Integration Tests Performance Under Load should handle multiple concurrent requests gracefully",
          "status": "passed",
          "title": "should handle multiple concurrent requests gracefully",
          "duration": 0.9710000000000036,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Pattern Sniper Integration with Locks"],
          "fullName": "Pattern Sniper Integration with Locks should handle rapid snipe executions with lock protection",
          "status": "skipped",
          "title": "should handle rapid snipe executions with lock protection",
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Pattern Sniper Integration with Locks"],
          "fullName": "Pattern Sniper Integration with Locks should prevent double-spend on same snipe target",
          "status": "skipped",
          "title": "should prevent double-spend on same snipe target",
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1750153224700,
      "endTime": 1750153224714.971,
      "status": "passed",
      "message": "",
      "name": "/Users/neo/Developer/mexc-sniper-bot/tests/integration/transaction-lock-integration.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["AdvancedTradingStrategy", "Volatility Adjustments"],
          "fullName": "AdvancedTradingStrategy Volatility Adjustments should adjust strategy for low volatility",
          "status": "passed",
          "title": "should adjust strategy for low volatility",
          "duration": 1.519292000000064,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["AdvancedTradingStrategy", "Volatility Adjustments"],
          "fullName": "AdvancedTradingStrategy Volatility Adjustments should adjust strategy for high volatility",
          "status": "passed",
          "title": "should adjust strategy for high volatility",
          "duration": 0.2345829999999296,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["AdvancedTradingStrategy", "Volatility Adjustments"],
          "fullName": "AdvancedTradingStrategy Volatility Adjustments should not adjust for normal volatility",
          "status": "passed",
          "title": "should not adjust for normal volatility",
          "duration": 0.13712499999996908,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["AdvancedTradingStrategy", "Volatility Adjustments"],
          "fullName": "AdvancedTradingStrategy Volatility Adjustments should handle extreme volatility values",
          "status": "passed",
          "title": "should handle extreme volatility values",
          "duration": 0.23204199999997854,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["AdvancedTradingStrategy", "Trailing Stop Loss"],
          "fullName": "AdvancedTradingStrategy Trailing Stop Loss should calculate trailing stop loss correctly",
          "status": "passed",
          "title": "should calculate trailing stop loss correctly",
          "duration": 0.09558300000003328,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["AdvancedTradingStrategy", "Trailing Stop Loss"],
          "fullName": "AdvancedTradingStrategy Trailing Stop Loss should not go below entry price",
          "status": "passed",
          "title": "should not go below entry price",
          "duration": 0.0707079999999678,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["AdvancedTradingStrategy", "Trailing Stop Loss"],
          "fullName": "AdvancedTradingStrategy Trailing Stop Loss should handle zero trailing percentage",
          "status": "passed",
          "title": "should handle zero trailing percentage",
          "duration": 0.057792000000063126,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["AdvancedTradingStrategy", "Trailing Stop Loss"],
          "fullName": "AdvancedTradingStrategy Trailing Stop Loss should handle 100% trailing percentage",
          "status": "passed",
          "title": "should handle 100% trailing percentage",
          "duration": 0.061958000000004176,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["AdvancedTradingStrategy", "Risk Assessment"],
          "fullName": "AdvancedTradingStrategy Risk Assessment should assess low risk correctly",
          "status": "passed",
          "title": "should assess low risk correctly",
          "duration": 0.16383299999995415,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["AdvancedTradingStrategy", "Risk Assessment"],
          "fullName": "AdvancedTradingStrategy Risk Assessment should assess medium risk correctly",
          "status": "passed",
          "title": "should assess medium risk correctly",
          "duration": 0.10208299999999326,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["AdvancedTradingStrategy", "Risk Assessment"],
          "fullName": "AdvancedTradingStrategy Risk Assessment should assess high risk correctly",
          "status": "passed",
          "title": "should assess high risk correctly",
          "duration": 0.08004200000004857,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["AdvancedTradingStrategy", "Risk Assessment"],
          "fullName": "AdvancedTradingStrategy Risk Assessment should handle zero capital gracefully",
          "status": "passed",
          "title": "should handle zero capital gracefully",
          "duration": 0.08100000000001728,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["AdvancedTradingStrategy", "Optimal Position Sizing"],
          "fullName": "AdvancedTradingStrategy Optimal Position Sizing should calculate optimal position for conservative risk tolerance",
          "status": "passed",
          "title": "should calculate optimal position for conservative risk tolerance",
          "duration": 0.09000000000003183,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["AdvancedTradingStrategy", "Optimal Position Sizing"],
          "fullName": "AdvancedTradingStrategy Optimal Position Sizing should calculate optimal position for moderate risk tolerance",
          "status": "passed",
          "title": "should calculate optimal position for moderate risk tolerance",
          "duration": 0.06579199999998764,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["AdvancedTradingStrategy", "Optimal Position Sizing"],
          "fullName": "AdvancedTradingStrategy Optimal Position Sizing should calculate optimal position for aggressive risk tolerance",
          "status": "passed",
          "title": "should calculate optimal position for aggressive risk tolerance",
          "duration": 0.07420799999999872,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["AdvancedTradingStrategy", "Optimal Position Sizing"],
          "fullName": "AdvancedTradingStrategy Optimal Position Sizing should handle invalid inputs gracefully",
          "status": "passed",
          "title": "should handle invalid inputs gracefully",
          "duration": 0.06762499999990723,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["AdvancedTradingStrategy", "Optimal Position Sizing"],
          "fullName": "AdvancedTradingStrategy Optimal Position Sizing should handle zero entry price",
          "status": "passed",
          "title": "should handle zero entry price",
          "duration": 0.06216699999993125,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["AdvancedTradingStrategy", "Advanced Features Integration"],
          "fullName": "AdvancedTradingStrategy Advanced Features Integration should combine volatility adjustment with sell recommendations",
          "status": "passed",
          "title": "should combine volatility adjustment with sell recommendations",
          "duration": 0.14883300000008148,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["AdvancedTradingStrategy", "Advanced Features Integration"],
          "fullName": "AdvancedTradingStrategy Advanced Features Integration should provide risk assessment with position sizing recommendations",
          "status": "passed",
          "title": "should provide risk assessment with position sizing recommendations",
          "duration": 0.03766699999994216,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["AdvancedTradingStrategy", "Advanced Features Integration"],
          "fullName": "AdvancedTradingStrategy Advanced Features Integration should maintain trailing stop loss through price movements",
          "status": "passed",
          "title": "should maintain trailing stop loss through price movements",
          "duration": 0.06154099999992013,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["AdvancedTradingStrategy", "Strategy Persistence"],
          "fullName": "AdvancedTradingStrategy Strategy Persistence should export advanced strategy with volatility adjustments",
          "status": "passed",
          "title": "should export advanced strategy with volatility adjustments",
          "duration": 0.08991700000001401,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["AdvancedTradingStrategy", "Strategy Persistence"],
          "fullName": "AdvancedTradingStrategy Strategy Persistence should import and maintain advanced features",
          "status": "passed",
          "title": "should import and maintain advanced features",
          "duration": 0.037707999999952335,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["AdvancedTradingStrategy", "Performance Optimization"],
          "fullName": "AdvancedTradingStrategy Performance Optimization should handle multiple volatility adjustments efficiently",
          "status": "passed",
          "title": "should handle multiple volatility adjustments efficiently",
          "duration": 1.132249999999999,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["AdvancedTradingStrategy", "Performance Optimization"],
          "fullName": "AdvancedTradingStrategy Performance Optimization should cache calculations when possible",
          "status": "passed",
          "title": "should cache calculations when possible",
          "duration": 0.07799999999997453,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1750153231376,
      "endTime": 1750153231381.1323,
      "status": "passed",
      "message": "",
      "name": "/Users/neo/Developer/mexc-sniper-bot/tests/unit/advanced-trading-strategy.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Agent Health Monitoring System", "Enhanced Health Check System"],
          "fullName": "Agent Health Monitoring System Enhanced Health Check System should register agents with enhanced health metrics",
          "status": "passed",
          "title": "should register agents with enhanced health metrics",
          "duration": 2.163332999999966,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Agent Health Monitoring System", "Enhanced Health Check System"],
          "fullName": "Agent Health Monitoring System Enhanced Health Check System should perform comprehensive health checks",
          "status": "passed",
          "title": "should perform comprehensive health checks",
          "duration": 101.7880419999999,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Agent Health Monitoring System", "Enhanced Health Check System"],
          "fullName": "Agent Health Monitoring System Enhanced Health Check System should calculate health scores correctly",
          "status": "passed",
          "title": "should calculate health scores correctly",
          "duration": 202.1770829999998,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Agent Health Monitoring System", "Enhanced Health Check System"],
          "fullName": "Agent Health Monitoring System Enhanced Health Check System should detect and update health trends",
          "status": "passed",
          "title": "should detect and update health trends",
          "duration": 6273.9524169999995,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Agent Health Monitoring System", "Enhanced Health Check System"],
          "fullName": "Agent Health Monitoring System Enhanced Health Check System should apply custom thresholds correctly",
          "status": "passed",
          "title": "should apply custom thresholds correctly",
          "duration": 802.1921670000002,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Agent Health Monitoring System", "Enhanced Health Check System"],
          "fullName": "Agent Health Monitoring System Enhanced Health Check System should attempt automatic recovery for failing agents",
          "status": "passed",
          "title": "should attempt automatic recovery for failing agents",
          "duration": 305.1642499999998,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Agent Health Monitoring System", "System Health Monitoring"],
          "fullName": "Agent Health Monitoring System System Health Monitoring should track system-wide statistics",
          "status": "passed",
          "title": "should track system-wide statistics",
          "duration": 0.6168330000000424,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Agent Health Monitoring System", "System Health Monitoring"],
          "fullName": "Agent Health Monitoring System System Health Monitoring should generate system alerts for unhealthy agent percentage",
          "status": "passed",
          "title": "should generate system alerts for unhealthy agent percentage",
          "duration": 1011.4262089999993,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Agent Health Monitoring System", "System Health Monitoring"],
          "fullName": "Agent Health Monitoring System System Health Monitoring should provide detailed agent health reports",
          "status": "passed",
          "title": "should provide detailed agent health reports",
          "duration": 0.4908339999983582,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Agent Health Monitoring System", "Monitoring Service Integration"],
          "fullName": "Agent Health Monitoring System Monitoring Service Integration should start and stop monitoring service",
          "status": "passed",
          "title": "should start and stop monitoring service",
          "duration": 0.4797920000000886,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Agent Health Monitoring System", "Monitoring Service Integration"],
          "fullName": "Agent Health Monitoring System Monitoring Service Integration should generate alerts for system issues",
          "status": "passed",
          "title": "should generate alerts for system issues",
          "duration": 1012.2365840000002,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Agent Health Monitoring System", "Monitoring Service Integration"],
          "fullName": "Agent Health Monitoring System Monitoring Service Integration should resolve alerts correctly",
          "status": "passed",
          "title": "should resolve alerts correctly",
          "duration": 506.4660839999997,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Agent Health Monitoring System", "Monitoring Service Integration"],
          "fullName": "Agent Health Monitoring System Monitoring Service Integration should update monitoring configuration",
          "status": "passed",
          "title": "should update monitoring configuration",
          "duration": 0.34499999999934516,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Agent Health Monitoring System", "Monitoring Service Integration"],
          "fullName": "Agent Health Monitoring System Monitoring Service Integration should provide monitoring statistics",
          "status": "passed",
          "title": "should provide monitoring statistics",
          "duration": 0.3781249999992724,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Agent Health Monitoring System", "Recovery Mechanisms"],
          "fullName": "Agent Health Monitoring System Recovery Mechanisms should add custom recovery strategies",
          "status": "passed",
          "title": "should add custom recovery strategies",
          "duration": 0.6287499999998545,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Agent Health Monitoring System", "Recovery Mechanisms"],
          "fullName": "Agent Health Monitoring System Recovery Mechanisms should track recovery attempts",
          "status": "passed",
          "title": "should track recovery attempts",
          "duration": 303.09762500000033,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Agent Health Monitoring System", "Recovery Mechanisms"],
          "fullName": "Agent Health Monitoring System Recovery Mechanisms should set agent status to recovering during recovery attempts",
          "status": "passed",
          "title": "should set agent status to recovering during recovery attempts",
          "duration": 303.9979170000006,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Agent Health Monitoring System", "Performance and Memory"],
          "fullName": "Agent Health Monitoring System Performance and Memory should estimate memory usage correctly",
          "status": "passed",
          "title": "should estimate memory usage correctly",
          "duration": 101.82874999999876,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Agent Health Monitoring System", "Performance and Memory"],
          "fullName": "Agent Health Monitoring System Performance and Memory should estimate CPU usage based on performance",
          "status": "passed",
          "title": "should estimate CPU usage based on performance",
          "duration": 1001.7529169999998,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Agent Health Monitoring System", "Performance and Memory"],
          "fullName": "Agent Health Monitoring System Performance and Memory should track cache hit rates",
          "status": "passed",
          "title": "should track cache hit rates",
          "duration": 101.18354200000067,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Agent Health Monitoring System", "Performance and Memory"],
          "fullName": "Agent Health Monitoring System Performance and Memory should clean up old health history",
          "status": "passed",
          "title": "should clean up old health history",
          "duration": 1516.1008330000004,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Agent Health Monitoring System", "Error Handling and Edge Cases"],
          "fullName": "Agent Health Monitoring System Error Handling and Edge Cases should handle agent not found gracefully",
          "status": "passed",
          "title": "should handle agent not found gracefully",
          "duration": 0.7223749999993743,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Agent Health Monitoring System", "Error Handling and Edge Cases"],
          "fullName": "Agent Health Monitoring System Error Handling and Edge Cases should handle agent registration conflicts",
          "status": "passed",
          "title": "should handle agent registration conflicts",
          "duration": 0.2677079999994021,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Agent Health Monitoring System", "Error Handling and Edge Cases"],
          "fullName": "Agent Health Monitoring System Error Handling and Edge Cases should handle health check timeouts",
          "status": "passed",
          "title": "should handle health check timeouts",
          "duration": 8001.419207999999,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Agent Health Monitoring System", "Error Handling and Edge Cases"],
          "fullName": "Agent Health Monitoring System Error Handling and Edge Cases should maintain health data consistency during errors",
          "status": "passed",
          "title": "should maintain health data consistency during errors",
          "duration": 101.55579099999886,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Agent Health Monitoring System", "Error Handling and Edge Cases"],
          "fullName": "Agent Health Monitoring System Error Handling and Edge Cases should handle monitoring service destruction gracefully",
          "status": "passed",
          "title": "should handle monitoring service destruction gracefully",
          "duration": 0.5342909999999392,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1750153218889,
      "endTime": 1750153240542.5342,
      "status": "passed",
      "message": "",
      "name": "/Users/neo/Developer/mexc-sniper-bot/tests/unit/agent-health-monitoring.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["API Credentials Authentication Flow", "API Credentials Saving"],
          "fullName": "API Credentials Authentication Flow API Credentials Saving should save credentials successfully and show masked keys",
          "status": "passed",
          "title": "should save credentials successfully and show masked keys",
          "duration": 61.52837499999998,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["API Credentials Authentication Flow", "API Credentials Saving"],
          "fullName": "API Credentials Authentication Flow API Credentials Saving should handle save errors gracefully",
          "status": "passed",
          "title": "should handle save errors gracefully",
          "duration": 17.20404199999996,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["API Credentials Authentication Flow", "API Credentials Testing"],
          "fullName": "API Credentials Authentication Flow API Credentials Testing should test credentials successfully",
          "status": "passed",
          "title": "should test credentials successfully",
          "duration": 9.342917000000057,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["API Credentials Authentication Flow", "API Credentials Testing"],
          "fullName": "API Credentials Authentication Flow API Credentials Testing should handle test failures with clear error messages",
          "status": "passed",
          "title": "should handle test failures with clear error messages",
          "duration": 7.550083000000086,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["API Credentials Authentication Flow", "Enhanced Credential Status"],
          "fullName": "API Credentials Authentication Flow Enhanced Credential Status should display fully connected status correctly",
          "status": "passed",
          "title": "should display fully connected status correctly",
          "duration": 6.16862500000002,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["API Credentials Authentication Flow", "Enhanced Credential Status"],
          "fullName": "API Credentials Authentication Flow Enhanced Credential Status should show refresh button and handle clicks",
          "status": "passed",
          "title": "should show refresh button and handle clicks",
          "duration": 0.1844580000000633,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["API Credentials Authentication Flow", "Error State Handling"],
          "fullName": "API Credentials Authentication Flow Error State Handling should not show contradictory messages",
          "status": "passed",
          "title": "should not show contradictory messages",
          "duration": 16.309582999999975,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "API Credentials Authentication Flow",
            "API Credentials Test Endpoint Integration"
          ],
          "fullName": "API Credentials Authentication Flow API Credentials Test Endpoint Integration should handle network connectivity failures",
          "status": "passed",
          "title": "should handle network connectivity failures",
          "duration": 0.8170410000000174,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "API Credentials Authentication Flow",
            "API Credentials Test Endpoint Integration"
          ],
          "fullName": "API Credentials Authentication Flow API Credentials Test Endpoint Integration should validate required fields",
          "status": "passed",
          "title": "should validate required fields",
          "duration": 0.2222910000000411,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "API Credentials Authentication Flow",
            "API Credentials Test Endpoint Integration"
          ],
          "fullName": "API Credentials Authentication Flow API Credentials Test Endpoint Integration should handle missing credentials gracefully",
          "status": "passed",
          "title": "should handle missing credentials gracefully",
          "duration": 0.275792000000024,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1750153228549,
      "endTime": 1750153228669.276,
      "status": "passed",
      "message": "",
      "name": "/Users/neo/Developer/mexc-sniper-bot/tests/unit/api-credentials-flow.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["API Credentials Request Body Validation"],
          "fullName": "API Credentials Request Body Validation should identify malformed JSON as the cause of \"Invalid request body\"",
          "status": "passed",
          "title": "should identify malformed JSON as the cause of \"Invalid request body\"",
          "duration": 1.1564999999999372,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["API Credentials Request Body Validation"],
          "fullName": "API Credentials Request Body Validation should validate proper JSON structure for API credentials",
          "status": "passed",
          "title": "should validate proper JSON structure for API credentials",
          "duration": 0.4215409999999338,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["API Credentials Request Body Validation"],
          "fullName": "API Credentials Request Body Validation should identify content-type issues",
          "status": "passed",
          "title": "should identify content-type issues",
          "duration": 0.4249170000000504,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["API Credentials Request Body Validation"],
          "fullName": "API Credentials Request Body Validation should validate required fields",
          "status": "passed",
          "title": "should validate required fields",
          "duration": 0.18704200000001947,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["API Credentials Request Body Validation"],
          "fullName": "API Credentials Request Body Validation should validate API key format requirements",
          "status": "passed",
          "title": "should validate API key format requirements",
          "duration": 0.14791600000000926,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["API Credentials Request Body Validation"],
          "fullName": "API Credentials Request Body Validation should simulate request body parsing scenarios",
          "status": "passed",
          "title": "should simulate request body parsing scenarios",
          "duration": 0.19095800000002328,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["API Credentials Request Body Validation"],
          "fullName": "API Credentials Request Body Validation should test user ID validation scenarios",
          "status": "passed",
          "title": "should test user ID validation scenarios",
          "duration": 0.11212499999999181,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["API Credentials Request Flow Integration"],
          "fullName": "API Credentials Request Flow Integration should identify common failure patterns",
          "status": "passed",
          "title": "should identify common failure patterns",
          "duration": 0.13912499999992178,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1750153233376,
      "endTime": 1750153233379.1392,
      "status": "passed",
      "message": "",
      "name": "/Users/neo/Developer/mexc-sniper-bot/tests/unit/api-credentials-validation.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Authentication Consolidation", "Route Decorators"],
          "fullName": "Authentication Consolidation Route Decorators should handle public routes without authentication",
          "status": "passed",
          "title": "should handle public routes without authentication",
          "duration": 4.464500000000044,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Authentication Consolidation", "Route Decorators"],
          "fullName": "Authentication Consolidation Route Decorators should handle public route errors gracefully",
          "status": "passed",
          "title": "should handle public route errors gracefully",
          "duration": 1.6383749999999964,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Authentication Consolidation", "Route Decorators"],
          "fullName": "Authentication Consolidation Route Decorators should apply authentication to authenticated routes",
          "status": "passed",
          "title": "should apply authentication to authenticated routes",
          "duration": 0.614334000000099,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Authentication Consolidation", "Route Decorators"],
          "fullName": "Authentication Consolidation Route Decorators should apply user-specific authentication to user query routes",
          "status": "passed",
          "title": "should apply user-specific authentication to user query routes",
          "duration": 0.4798749999999927,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Authentication Consolidation", "Route Decorators"],
          "fullName": "Authentication Consolidation Route Decorators should apply admin authentication to admin routes",
          "status": "passed",
          "title": "should apply admin authentication to admin routes",
          "duration": 0.43020800000010695,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Authentication Consolidation", "Route Decorators"],
          "fullName": "Authentication Consolidation Route Decorators should apply secure authentication to secure routes",
          "status": "passed",
          "title": "should apply secure authentication to secure routes",
          "duration": 0.43099999999992633,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Authentication Consolidation", "Route Decorators"],
          "fullName": "Authentication Consolidation Route Decorators should apply trading authentication to trading routes",
          "status": "passed",
          "title": "should apply trading authentication to trading routes",
          "duration": 0.3990000000000009,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Authentication Consolidation", "Route Decorators"],
          "fullName": "Authentication Consolidation Route Decorators should apply sensitive data authentication to sensitive routes",
          "status": "passed",
          "title": "should apply sensitive data authentication to sensitive routes",
          "duration": 0.4434170000000677,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Authentication Consolidation", "Utility Functions"],
          "fullName": "Authentication Consolidation Utility Functions should validate required fields correctly",
          "status": "passed",
          "title": "should validate required fields correctly",
          "duration": 0.4465410000000247,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Authentication Consolidation", "Utility Functions"],
          "fullName": "Authentication Consolidation Utility Functions should return error for missing required fields",
          "status": "passed",
          "title": "should return error for missing required fields",
          "duration": 0.36524999999994634,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Authentication Consolidation", "Utility Functions"],
          "fullName": "Authentication Consolidation Utility Functions should extract pagination parameters correctly",
          "status": "passed",
          "title": "should extract pagination parameters correctly",
          "duration": 0.7739579999999933,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Authentication Consolidation", "Utility Functions"],
          "fullName": "Authentication Consolidation Utility Functions should use default pagination parameters",
          "status": "passed",
          "title": "should use default pagination parameters",
          "duration": 0.37333300000000236,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Authentication Consolidation", "Utility Functions"],
          "fullName": "Authentication Consolidation Utility Functions should enforce pagination limits",
          "status": "passed",
          "title": "should enforce pagination limits",
          "duration": 0.4418750000000955,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Authentication Consolidation", "Utility Functions"],
          "fullName": "Authentication Consolidation Utility Functions should extract filter parameters correctly",
          "status": "passed",
          "title": "should extract filter parameters correctly",
          "duration": 0.5902090000000726,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Authentication Consolidation", "Utility Functions"],
          "fullName": "Authentication Consolidation Utility Functions should return empty object when no filters match",
          "status": "passed",
          "title": "should return empty object when no filters match",
          "duration": 0.41279199999996763,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Authentication Consolidation", "User Body Route Integration"],
          "fullName": "Authentication Consolidation User Body Route Integration should handle user body route with valid data",
          "status": "passed",
          "title": "should handle user body route with valid data",
          "duration": 1.3281670000000076,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1750153228491,
      "endTime": 1750153228505.3281,
      "status": "passed",
      "message": "",
      "name": "/Users/neo/Developer/mexc-sniper-bot/tests/unit/auth-consolidation.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["BaseAgent Caching"],
          "fullName": "BaseAgent Caching should cache responses and return cached results",
          "status": "passed",
          "title": "should cache responses and return cached results",
          "duration": 2.0077909999999974,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["BaseAgent Caching"],
          "fullName": "BaseAgent Caching should respect cache TTL and refresh expired entries",
          "status": "passed",
          "title": "should respect cache TTL and refresh expired entries",
          "duration": 1101.346292,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["BaseAgent Caching"],
          "fullName": "BaseAgent Caching should allow disabling cache",
          "status": "passed",
          "title": "should allow disabling cache",
          "duration": 0.43899999999985084,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["BaseAgent Caching"],
          "fullName": "BaseAgent Caching should provide cache statistics",
          "status": "passed",
          "title": "should provide cache statistics",
          "duration": 0.3237500000000182,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["BaseAgent Caching"],
          "fullName": "BaseAgent Caching should generate different cache keys for different inputs",
          "status": "passed",
          "title": "should generate different cache keys for different inputs",
          "duration": 0.26045799999997143,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["BaseAgent Caching"],
          "fullName": "BaseAgent Caching should generate consistent cache keys for identical inputs",
          "status": "passed",
          "title": "should generate consistent cache keys for identical inputs",
          "duration": 0.17816599999991922,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["BaseAgent Caching"],
          "fullName": "BaseAgent Caching should generate different cache keys for different inputs",
          "status": "passed",
          "title": "should generate different cache keys for different inputs",
          "duration": 0.47804100000007566,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1750153225762,
      "endTime": 1750153226866.478,
      "status": "passed",
      "message": "",
      "name": "/Users/neo/Developer/mexc-sniper-bot/tests/unit/base-agent-caching.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Cache Manager", "Basic Cache Operations"],
          "fullName": "Cache Manager Basic Cache Operations should set and get cache entries",
          "status": "passed",
          "title": "should set and get cache entries",
          "duration": 1.1491659999999229,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Cache Manager", "Basic Cache Operations"],
          "fullName": "Cache Manager Basic Cache Operations should respect TTL expiration",
          "status": "passed",
          "title": "should respect TTL expiration",
          "duration": 151.32991600000003,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Cache Manager", "Basic Cache Operations"],
          "fullName": "Cache Manager Basic Cache Operations should handle cache levels correctly",
          "status": "passed",
          "title": "should handle cache levels correctly",
          "duration": 0.2884159999999838,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Cache Manager", "Basic Cache Operations"],
          "fullName": "Cache Manager Basic Cache Operations should delete cache entries",
          "status": "passed",
          "title": "should delete cache entries",
          "duration": 0.3981659999999465,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Cache Manager", "Basic Cache Operations"],
          "fullName": "Cache Manager Basic Cache Operations should clear all cache levels",
          "status": "passed",
          "title": "should clear all cache levels",
          "duration": 0.2852500000000191,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Cache Manager", "Cache Invalidation"],
          "fullName": "Cache Manager Cache Invalidation should invalidate by pattern",
          "status": "passed",
          "title": "should invalidate by pattern",
          "duration": 0.5000840000000153,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Cache Manager", "Cache Invalidation"],
          "fullName": "Cache Manager Cache Invalidation should invalidate by type",
          "status": "passed",
          "title": "should invalidate by type",
          "duration": 0.3961669999999913,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Cache Manager", "Cache Invalidation"],
          "fullName": "Cache Manager Cache Invalidation should invalidate by dependency",
          "status": "passed",
          "title": "should invalidate by dependency",
          "duration": 0.292041999999924,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Cache Manager", "Cache Analytics"],
          "fullName": "Cache Manager Cache Analytics should track cache metrics",
          "status": "passed",
          "title": "should track cache metrics",
          "duration": 0.5788340000000289,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Cache Manager", "Cache Analytics"],
          "fullName": "Cache Manager Cache Analytics should provide size breakdown",
          "status": "passed",
          "title": "should provide size breakdown",
          "duration": 0.3729170000000295,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Cache Manager", "Cache Analytics"],
          "fullName": "Cache Manager Cache Analytics should generate recommendations",
          "status": "passed",
          "title": "should generate recommendations",
          "duration": 0.1574999999999136,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Cache Manager", "Cache Optimization"],
          "fullName": "Cache Manager Cache Optimization should cleanup expired entries",
          "status": "passed",
          "title": "should cleanup expired entries",
          "duration": 100.64924999999994,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Cache Manager", "Cache Optimization"],
          "fullName": "Cache Manager Cache Optimization should optimize cache performance",
          "status": "passed",
          "title": "should optimize cache performance",
          "duration": 0.31475000000000364,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Agent Cache", "Agent Response Caching"],
          "fullName": "Enhanced Agent Cache Agent Response Caching should cache and retrieve agent responses",
          "status": "passed",
          "title": "should cache and retrieve agent responses",
          "duration": 1.0808329999999842,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Agent Cache", "Agent Response Caching"],
          "fullName": "Enhanced Agent Cache Agent Response Caching should handle agent response priorities",
          "status": "passed",
          "title": "should handle agent response priorities",
          "duration": 0.2065420000000131,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Agent Cache", "Agent Response Caching"],
          "fullName": "Enhanced Agent Cache Agent Response Caching should invalidate agent responses by criteria",
          "status": "passed",
          "title": "should invalidate agent responses by criteria",
          "duration": 12.12824999999998,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Agent Cache", "Workflow Caching"],
          "fullName": "Enhanced Agent Cache Workflow Caching should cache workflow results",
          "status": "passed",
          "title": "should cache workflow results",
          "duration": 0.3949999999999818,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Agent Cache", "Workflow Caching"],
          "fullName": "Enhanced Agent Cache Workflow Caching should invalidate workflow results",
          "status": "passed",
          "title": "should invalidate workflow results",
          "duration": 11.795416000000046,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Agent Cache", "Health Caching"],
          "fullName": "Enhanced Agent Cache Health Caching should cache agent health status",
          "status": "passed",
          "title": "should cache agent health status",
          "duration": 0.31295799999998053,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Agent Cache", "Cache Analytics"],
          "fullName": "Enhanced Agent Cache Cache Analytics should provide agent cache analytics",
          "status": "passed",
          "title": "should provide agent cache analytics",
          "duration": 0.5466670000000704,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["API Response Cache", "API Response Caching"],
          "fullName": "API Response Cache API Response Caching should cache API responses",
          "status": "passed",
          "title": "should cache API responses",
          "duration": 0.5780419999999822,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["API Response Cache", "API Response Caching"],
          "fullName": "API Response Cache API Response Caching should handle freshness validation",
          "status": "passed",
          "title": "should handle freshness validation",
          "duration": 151.7917920000001,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["API Response Cache", "API Response Caching"],
          "fullName": "API Response Cache API Response Caching should invalidate API responses",
          "status": "passed",
          "title": "should invalidate API responses",
          "duration": 11.86441600000012,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["API Response Cache", "Request Deduplication"],
          "fullName": "API Response Cache Request Deduplication should deduplicate concurrent requests",
          "status": "passed",
          "title": "should deduplicate concurrent requests",
          "duration": 101.78049999999985,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["API Response Cache", "API Cache Analytics"],
          "fullName": "API Response Cache API Cache Analytics should provide API cache analytics",
          "status": "passed",
          "title": "should provide API cache analytics",
          "duration": 0.375583000000006,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Cache Monitoring System", "Cache Monitoring"],
          "fullName": "Cache Monitoring System Cache Monitoring should collect current cache status",
          "status": "passed",
          "title": "should collect current cache status",
          "duration": 0.5854170000000067,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Cache Monitoring System", "Cache Monitoring"],
          "fullName": "Cache Monitoring System Cache Monitoring should track alerts",
          "status": "passed",
          "title": "should track alerts",
          "duration": 0.10458300000004783,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Cache Monitoring System", "Cache Monitoring"],
          "fullName": "Cache Monitoring System Cache Monitoring should provide recommendations",
          "status": "passed",
          "title": "should provide recommendations",
          "duration": 0.1464579999999387,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Cache Monitoring System", "Cache Monitoring"],
          "fullName": "Cache Monitoring System Cache Monitoring should optimize cache performance",
          "status": "passed",
          "title": "should optimize cache performance",
          "duration": 0.2802919999999176,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Cache Monitoring System", "Performance Reports"],
          "fullName": "Cache Monitoring System Performance Reports should generate performance reports",
          "status": "passed",
          "title": "should generate performance reports",
          "duration": 51.5038340000001,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Cache Utilities", "generateCacheKey"],
          "fullName": "Cache Utilities generateCacheKey should generate consistent cache keys",
          "status": "passed",
          "title": "should generate consistent cache keys",
          "duration": 0.8224999999999909,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Cache Utilities", "generateCacheKey"],
          "fullName": "Cache Utilities generateCacheKey should handle different data types",
          "status": "passed",
          "title": "should handle different data types",
          "duration": 0.10870799999997871,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Global Cache Integration"],
          "fullName": "Global Cache Integration should have global cache instances available",
          "status": "passed",
          "title": "should have global cache instances available",
          "duration": 0.0861250000000382,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Global Cache Integration"],
          "fullName": "Global Cache Integration should maintain cache state across operations",
          "status": "passed",
          "title": "should maintain cache state across operations",
          "duration": 0.08833300000014788,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Global Cache Integration"],
          "fullName": "Global Cache Integration should provide analytics from global instances",
          "status": "passed",
          "title": "should provide analytics from global instances",
          "duration": 0.1007919999999558,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Cache Error Handling"],
          "fullName": "Cache Error Handling should handle cache errors gracefully",
          "status": "passed",
          "title": "should handle cache errors gracefully",
          "duration": 0.6745829999999842,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Cache Error Handling"],
          "fullName": "Cache Error Handling should handle serialization errors",
          "status": "passed",
          "title": "should handle serialization errors",
          "duration": 0.17495899999994435,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Cache Performance"],
          "fullName": "Cache Performance should handle large cache operations efficiently",
          "status": "passed",
          "title": "should handle large cache operations efficiently",
          "duration": 1.426333999999997,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Cache Performance"],
          "fullName": "Cache Performance should maintain good hit rates under load",
          "status": "passed",
          "title": "should maintain good hit rates under load",
          "duration": 0.6658340000001317,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1750153226033,
      "endTime": 1750153226640.6658,
      "status": "passed",
      "message": "",
      "name": "/Users/neo/Developer/mexc-sniper-bot/tests/unit/cache-system.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Agent Coordination System", "AgentRegistry"],
          "fullName": "Agent Coordination System AgentRegistry should register and retrieve agents",
          "status": "passed",
          "title": "should register and retrieve agents",
          "duration": 1.1970000000000027,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Agent Coordination System", "AgentRegistry"],
          "fullName": "Agent Coordination System AgentRegistry should check agent availability",
          "status": "passed",
          "title": "should check agent availability",
          "duration": 0.30541699999992034,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Agent Coordination System", "AgentRegistry"],
          "fullName": "Agent Coordination System AgentRegistry should get agents by type",
          "status": "passed",
          "title": "should get agents by type",
          "duration": 1.214666999999963,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Agent Coordination System", "AgentRegistry"],
          "fullName": "Agent Coordination System AgentRegistry should get registry statistics",
          "status": "passed",
          "title": "should get registry statistics",
          "duration": 0.3609169999999722,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Agent Coordination System", "AgentRegistry"],
          "fullName": "Agent Coordination System AgentRegistry should perform health checks",
          "status": "passed",
          "title": "should perform health checks",
          "duration": 0.9397910000000138,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Agent Coordination System", "WorkflowEngine"],
          "fullName": "Agent Coordination System WorkflowEngine should register workflow definitions",
          "status": "passed",
          "title": "should register workflow definitions",
          "duration": 0.3657499999999345,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Agent Coordination System", "WorkflowEngine"],
          "fullName": "Agent Coordination System WorkflowEngine should validate workflow definitions",
          "status": "passed",
          "title": "should validate workflow definitions",
          "duration": 0.46758299999999053,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Agent Coordination System", "WorkflowEngine"],
          "fullName": "Agent Coordination System WorkflowEngine should track running workflows",
          "status": "passed",
          "title": "should track running workflows",
          "duration": 0.203125,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Agent Coordination System", "PerformanceCollector"],
          "fullName": "Agent Coordination System PerformanceCollector should get current performance summary",
          "status": "passed",
          "title": "should get current performance summary",
          "duration": 0.3417909999999438,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Agent Coordination System", "PerformanceCollector"],
          "fullName": "Agent Coordination System PerformanceCollector should generate performance reports",
          "status": "passed",
          "title": "should generate performance reports",
          "duration": 0.430582999999956,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Agent Coordination System", "Integration Tests"],
          "fullName": "Agent Coordination System Integration Tests should create complete coordination system",
          "status": "passed",
          "title": "should create complete coordination system",
          "duration": 1.3915000000000646,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Agent Coordination System", "Integration Tests"],
          "fullName": "Agent Coordination System Integration Tests should handle orchestrator workflow execution",
          "status": "passed",
          "title": "should handle orchestrator workflow execution",
          "duration": 3.8312909999999647,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1750153229201,
      "endTime": 1750153229212.8313,
      "status": "passed",
      "message": "",
      "name": "/Users/neo/Developer/mexc-sniper-bot/tests/unit/coordination-system.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Database Optimization", "Phase 1: Query Performance Analysis"],
          "fullName": "Database Optimization Phase 1: Query Performance Analysis should analyze query performance and identify bottlenecks",
          "status": "passed",
          "title": "should analyze query performance and identify bottlenecks",
          "duration": 1.2852499999999054,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Database Optimization", "Phase 1: Query Performance Analysis"],
          "fullName": "Database Optimization Phase 1: Query Performance Analysis should export analysis results",
          "status": "passed",
          "title": "should export analysis results",
          "duration": 0.23554200000035053,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Database Optimization", "Phase 2: Index Optimization"],
          "fullName": "Database Optimization Phase 2: Index Optimization should create strategic indexes for agent operations",
          "status": "passed",
          "title": "should create strategic indexes for agent operations",
          "duration": 0.19791699999950652,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Database Optimization", "Phase 2: Index Optimization"],
          "fullName": "Database Optimization Phase 2: Index Optimization should validate index integrity",
          "status": "passed",
          "title": "should validate index integrity",
          "duration": 3.5591660000000047,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Database Optimization", "Phase 2: Index Optimization"],
          "fullName": "Database Optimization Phase 2: Index Optimization should generate optimized index SQL",
          "status": "passed",
          "title": "should generate optimized index SQL",
          "duration": 1.557542000000467,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Database Optimization", "Phase 3: Query Optimization"],
          "fullName": "Database Optimization Phase 3: Query Optimization should optimize snipe target queries",
          "status": "passed",
          "title": "should optimize snipe target queries",
          "duration": 0.1652090000006865,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Database Optimization", "Phase 3: Query Optimization"],
          "fullName": "Database Optimization Phase 3: Query Optimization should optimize pattern embedding queries",
          "status": "passed",
          "title": "should optimize pattern embedding queries",
          "duration": 0.13008300000001327,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Database Optimization", "Phase 3: Query Optimization"],
          "fullName": "Database Optimization Phase 3: Query Optimization should handle batch operations efficiently",
          "status": "passed",
          "title": "should handle batch operations efficiently",
          "duration": 0.1295829999999114,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Database Optimization", "Phase 3: Query Optimization"],
          "fullName": "Database Optimization Phase 3: Query Optimization should implement query result caching",
          "status": "passed",
          "title": "should implement query result caching",
          "duration": 0.24325000000044383,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Database Optimization", "Phase 4: Connection Pooling & Caching"],
          "fullName": "Database Optimization Phase 4: Connection Pooling & Caching should configure connection pool for optimal performance",
          "status": "passed",
          "title": "should configure connection pool for optimal performance",
          "duration": 0.7496250000003783,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Database Optimization", "Phase 4: Connection Pooling & Caching"],
          "fullName": "Database Optimization Phase 4: Connection Pooling & Caching should implement query result caching",
          "status": "passed",
          "title": "should implement query result caching",
          "duration": 0.21374999999989086,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Database Optimization", "Phase 4: Connection Pooling & Caching"],
          "fullName": "Database Optimization Phase 4: Connection Pooling & Caching should execute optimized select queries",
          "status": "passed",
          "title": "should execute optimized select queries",
          "duration": 357.39508399999977,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Database Optimization", "Phase 4: Connection Pooling & Caching"],
          "fullName": "Database Optimization Phase 4: Connection Pooling & Caching should execute optimized write queries with cache invalidation",
          "status": "passed",
          "title": "should execute optimized write queries with cache invalidation",
          "duration": 0.36229199999979755,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Database Optimization", "Complete Optimization Integration"],
          "fullName": "Database Optimization Complete Optimization Integration should run complete optimization successfully",
          "status": "passed",
          "title": "should run complete optimization successfully",
          "duration": 0.1310410000005504,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Database Optimization", "Complete Optimization Integration"],
          "fullName": "Database Optimization Complete Optimization Integration should achieve performance improvement target",
          "status": "passed",
          "title": "should achieve performance improvement target",
          "duration": 0.11270899999999529,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Database Optimization", "Complete Optimization Integration"],
          "fullName": "Database Optimization Complete Optimization Integration should optimize for agent workloads",
          "status": "passed",
          "title": "should optimize for agent workloads",
          "duration": 0.29945800000041345,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Database Optimization", "Complete Optimization Integration"],
          "fullName": "Database Optimization Complete Optimization Integration should export optimization report",
          "status": "passed",
          "title": "should export optimization report",
          "duration": 0.37120799999956944,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Database Optimization", "Performance Monitoring"],
          "fullName": "Database Optimization Performance Monitoring should monitor query performance",
          "status": "passed",
          "title": "should monitor query performance",
          "duration": 0.19604200000048877,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Database Optimization", "Performance Monitoring"],
          "fullName": "Database Optimization Performance Monitoring should provide optimization recommendations",
          "status": "passed",
          "title": "should provide optimization recommendations",
          "duration": 0.24220900000000256,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Database Optimization", "Performance Monitoring"],
          "fullName": "Database Optimization Performance Monitoring should wrap queries with monitoring",
          "status": "passed",
          "title": "should wrap queries with monitoring",
          "duration": 361.8331250000001,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1750153223159,
      "endTime": 1750153223888.833,
      "status": "passed",
      "message": "",
      "name": "/Users/neo/Developer/mexc-sniper-bot/tests/unit/database-optimization.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Enhanced Rate Limiter", "Security Event Logging"],
          "fullName": "Enhanced Rate Limiter Security Event Logging should log security events with timestamps",
          "status": "passed",
          "title": "should log security events with timestamps",
          "duration": 1.725500000000011,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Rate Limiter", "Security Event Logging"],
          "fullName": "Enhanced Rate Limiter Security Event Logging should filter events by type",
          "status": "passed",
          "title": "should filter events by type",
          "duration": 0.27841699999999037,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Rate Limiter", "Security Event Logging"],
          "fullName": "Enhanced Rate Limiter Security Event Logging should limit stored events to prevent memory bloat",
          "status": "passed",
          "title": "should limit stored events to prevent memory bloat",
          "duration": 1.3908329999999296,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Rate Limiter", "Enhanced Rate Limiting"],
          "fullName": "Enhanced Rate Limiter Enhanced Rate Limiting should track first and last attempt times",
          "status": "passed",
          "title": "should track first and last attempt times",
          "duration": 0.3380410000000893,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Rate Limiter", "Enhanced Rate Limiting"],
          "fullName": "Enhanced Rate Limiter Enhanced Rate Limiting should log authentication attempts",
          "status": "passed",
          "title": "should log authentication attempts",
          "duration": 0.32387499999992997,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Rate Limiter", "Enhanced Rate Limiting"],
          "fullName": "Enhanced Rate Limiter Enhanced Rate Limiting should log rate limit violations",
          "status": "passed",
          "title": "should log rate limit violations",
          "duration": 0.29662500000006276,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Rate Limiter", "Enhanced Rate Limiting"],
          "fullName": "Enhanced Rate Limiter Enhanced Rate Limiting should detect suspicious activity",
          "status": "passed",
          "title": "should detect suspicious activity",
          "duration": 0.23162500000000819,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Rate Limiter", "IP Analysis"],
          "fullName": "Enhanced Rate Limiter IP Analysis should identify suspicious IPs",
          "status": "passed",
          "title": "should identify suspicious IPs",
          "duration": 0.17891600000007202,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Rate Limiter", "IP Analysis"],
          "fullName": "Enhanced Rate Limiter IP Analysis should provide detailed IP analysis",
          "status": "passed",
          "title": "should provide detailed IP analysis",
          "duration": 0.37954100000001745,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Rate Limiter", "IP Analysis"],
          "fullName": "Enhanced Rate Limiter IP Analysis should calculate risk levels correctly",
          "status": "passed",
          "title": "should calculate risk levels correctly",
          "duration": 0.28474999999991724,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Rate Limiter", "Statistics and Monitoring"],
          "fullName": "Enhanced Rate Limiter Statistics and Monitoring should provide rate limit statistics",
          "status": "passed",
          "title": "should provide rate limit statistics",
          "duration": 0.24995799999999235,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Enhanced Rate Limiter", "Statistics and Monitoring"],
          "fullName": "Enhanced Rate Limiter Statistics and Monitoring should identify top offenders",
          "status": "passed",
          "title": "should identify top offenders",
          "duration": 0.2247500000000855,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1750153230037,
      "endTime": 1750153230043.25,
      "status": "passed",
      "message": "",
      "name": "/Users/neo/Developer/mexc-sniper-bot/tests/unit/enhanced-rate-limiter.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["MEXC API Client Utilities", "Signature generation logic"],
          "fullName": "MEXC API Client Utilities Signature generation logic should create proper query string for signature",
          "status": "passed",
          "title": "should create proper query string for signature",
          "duration": 9.420333999999912,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MEXC API Client Utilities", "Signature generation logic"],
          "fullName": "MEXC API Client Utilities Signature generation logic should filter out undefined and null values",
          "status": "passed",
          "title": "should filter out undefined and null values",
          "duration": 0.28375000000005457,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MEXC API Client Utilities", "Signature generation logic"],
          "fullName": "MEXC API Client Utilities Signature generation logic should sort parameters alphabetically",
          "status": "passed",
          "title": "should sort parameters alphabetically",
          "duration": 0.18058299999995597,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MEXC API Client Utilities", "Rate limiting logic"],
          "fullName": "MEXC API Client Utilities Rate limiting logic should calculate correct delay when request is too soon",
          "status": "passed",
          "title": "should calculate correct delay when request is too soon",
          "duration": 0.1043329999999969,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MEXC API Client Utilities", "Rate limiting logic"],
          "fullName": "MEXC API Client Utilities Rate limiting logic should not delay when enough time has passed",
          "status": "passed",
          "title": "should not delay when enough time has passed",
          "duration": 0.07054199999993216,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MEXC API Client Utilities", "URL construction logic"],
          "fullName": "MEXC API Client Utilities URL construction logic should build correct endpoint URLs",
          "status": "passed",
          "title": "should build correct endpoint URLs",
          "duration": 0.08329199999991488,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MEXC API Client Utilities", "URL construction logic"],
          "fullName": "MEXC API Client Utilities URL construction logic should handle endpoint with leading slash",
          "status": "passed",
          "title": "should handle endpoint with leading slash",
          "duration": 0.06325000000003911,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MEXC API Client Utilities", "URL construction logic"],
          "fullName": "MEXC API Client Utilities URL construction logic should handle endpoint without leading slash",
          "status": "passed",
          "title": "should handle endpoint without leading slash",
          "duration": 0.057792000000063126,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MEXC API Client Utilities", "Configuration validation"],
          "fullName": "MEXC API Client Utilities Configuration validation should use default values when not provided",
          "status": "passed",
          "title": "should use default values when not provided",
          "duration": 0.09533399999997982,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MEXC API Client Utilities", "Configuration validation"],
          "fullName": "MEXC API Client Utilities Configuration validation should use provided values over defaults",
          "status": "passed",
          "title": "should use provided values over defaults",
          "duration": 0.07824999999991178,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MEXC API Client Utilities", "Error handling scenarios"],
          "fullName": "MEXC API Client Utilities Error handling scenarios should identify missing credentials error",
          "status": "passed",
          "title": "should identify missing credentials error",
          "duration": 0.10633399999994708,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MEXC API Client Utilities", "Error handling scenarios"],
          "fullName": "MEXC API Client Utilities Error handling scenarios should validate request parameters",
          "status": "passed",
          "title": "should validate request parameters",
          "duration": 0.5488749999999527,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1750153229333,
      "endTime": 1750153229344.5488,
      "status": "passed",
      "message": "",
      "name": "/Users/neo/Developer/mexc-sniper-bot/tests/unit/mexc-api-client.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["MEXC Schemas", "CalendarEntrySchema"],
          "fullName": "MEXC Schemas CalendarEntrySchema should validate a correct calendar entry",
          "status": "passed",
          "title": "should validate a correct calendar entry",
          "duration": 2.0216250000000855,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MEXC Schemas", "CalendarEntrySchema"],
          "fullName": "MEXC Schemas CalendarEntrySchema should reject calendar entry with missing fields",
          "status": "passed",
          "title": "should reject calendar entry with missing fields",
          "duration": 0.5121670000000904,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MEXC Schemas", "CalendarEntrySchema"],
          "fullName": "MEXC Schemas CalendarEntrySchema should reject calendar entry with wrong types",
          "status": "passed",
          "title": "should reject calendar entry with wrong types",
          "duration": 0.1765420000000404,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MEXC Schemas", "SymbolV2EntrySchema"],
          "fullName": "MEXC Schemas SymbolV2EntrySchema should validate a correct symbol entry",
          "status": "passed",
          "title": "should validate a correct symbol entry",
          "duration": 0.2843749999999545,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MEXC Schemas", "SymbolV2EntrySchema"],
          "fullName": "MEXC Schemas SymbolV2EntrySchema should validate minimal symbol entry",
          "status": "passed",
          "title": "should validate minimal symbol entry",
          "duration": 0.14220899999997982,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MEXC Schemas", "SymbolV2EntrySchema"],
          "fullName": "MEXC Schemas SymbolV2EntrySchema should reject symbol entry with missing required fields",
          "status": "passed",
          "title": "should reject symbol entry with missing required fields",
          "duration": 0.14250000000004093,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MEXC Schemas", "ReadyStatePatternSchema"],
          "fullName": "MEXC Schemas ReadyStatePatternSchema should validate correct ready state pattern",
          "status": "passed",
          "title": "should validate correct ready state pattern",
          "duration": 0.13029099999994287,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MEXC Schemas", "ReadyStatePatternSchema"],
          "fullName": "MEXC Schemas ReadyStatePatternSchema should validate READY_STATE_PATTERN constant",
          "status": "passed",
          "title": "should validate READY_STATE_PATTERN constant",
          "duration": 0.16920900000002348,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MEXC Schemas", "Validation helpers"],
          "fullName": "MEXC Schemas Validation helpers should validate calendar entry with helper function",
          "status": "passed",
          "title": "should validate calendar entry with helper function",
          "duration": 0.1019579999999678,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MEXC Schemas", "Validation helpers"],
          "fullName": "MEXC Schemas Validation helpers should throw error for invalid calendar entry",
          "status": "passed",
          "title": "should throw error for invalid calendar entry",
          "duration": 0.16237499999999727,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MEXC Schemas", "Validation helpers"],
          "fullName": "MEXC Schemas Validation helpers should validate symbol entry with helper function",
          "status": "passed",
          "title": "should validate symbol entry with helper function",
          "duration": 0.08745799999996962,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MEXC Schemas", "Pattern matching utilities", "matchesReadyPattern"],
          "fullName": "MEXC Schemas Pattern matching utilities matchesReadyPattern should return true for symbol matching ready pattern",
          "status": "passed",
          "title": "should return true for symbol matching ready pattern",
          "duration": 0.1047919999999749,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MEXC Schemas", "Pattern matching utilities", "matchesReadyPattern"],
          "fullName": "MEXC Schemas Pattern matching utilities matchesReadyPattern should return false for symbol not matching ready pattern",
          "status": "passed",
          "title": "should return false for symbol not matching ready pattern",
          "duration": 0.04316699999992579,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MEXC Schemas", "Pattern matching utilities", "matchesReadyPattern"],
          "fullName": "MEXC Schemas Pattern matching utilities matchesReadyPattern should return true for incomplete symbol with correct pattern",
          "status": "passed",
          "title": "should return true for incomplete symbol with correct pattern",
          "duration": 0.040916999999922155,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MEXC Schemas", "Pattern matching utilities", "hasCompleteData"],
          "fullName": "MEXC Schemas Pattern matching utilities hasCompleteData should return true for symbol with complete data",
          "status": "passed",
          "title": "should return true for symbol with complete data",
          "duration": 0.05920899999989615,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MEXC Schemas", "Pattern matching utilities", "hasCompleteData"],
          "fullName": "MEXC Schemas Pattern matching utilities hasCompleteData should return false for symbol missing data",
          "status": "passed",
          "title": "should return false for symbol missing data",
          "duration": 0.052500000000009095,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MEXC Schemas", "Pattern matching utilities", "isValidForSnipe"],
          "fullName": "MEXC Schemas Pattern matching utilities isValidForSnipe should return true only for ready symbols with complete data",
          "status": "passed",
          "title": "should return true only for ready symbols with complete data",
          "duration": 0.049541999999973996,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MEXC Schemas", "Pattern matching utilities", "isValidForSnipe"],
          "fullName": "MEXC Schemas Pattern matching utilities isValidForSnipe should return false for not ready symbols",
          "status": "passed",
          "title": "should return false for not ready symbols",
          "duration": 0.03725000000008549,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MEXC Schemas", "Pattern matching utilities", "isValidForSnipe"],
          "fullName": "MEXC Schemas Pattern matching utilities isValidForSnipe should return false for ready symbols without complete data",
          "status": "passed",
          "title": "should return false for ready symbols without complete data",
          "duration": 0.040124999999989086,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1750153232055,
      "endTime": 1750153232060.1047,
      "status": "passed",
      "message": "",
      "name": "/Users/neo/Developer/mexc-sniper-bot/tests/unit/mexc-schemas.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["MultiPhaseExecutor", "Phase Execution Logic"],
          "fullName": "MultiPhaseExecutor Phase Execution Logic should identify phases to execute based on price",
          "status": "passed",
          "title": "should identify phases to execute based on price",
          "duration": 1.2160420000000158,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseExecutor", "Phase Execution Logic"],
          "fullName": "MultiPhaseExecutor Phase Execution Logic should execute multiple phases when price hits multiple targets",
          "status": "passed",
          "title": "should execute multiple phases when price hits multiple targets",
          "duration": 0.2077920000000404,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseExecutor", "Phase Execution Logic"],
          "fullName": "MultiPhaseExecutor Phase Execution Logic should not execute already completed phases",
          "status": "passed",
          "title": "should not execute already completed phases",
          "duration": 0.2012920000000804,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseExecutor", "Phase Execution Logic"],
          "fullName": "MultiPhaseExecutor Phase Execution Logic should calculate urgency correctly",
          "status": "passed",
          "title": "should calculate urgency correctly",
          "duration": 0.1203330000000733,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseExecutor", "Phase Execution Logic"],
          "fullName": "MultiPhaseExecutor Phase Execution Logic should limit phases per execution",
          "status": "passed",
          "title": "should limit phases per execution",
          "duration": 0.11374999999998181,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseExecutor", "Phase Execution Logic"],
          "fullName": "MultiPhaseExecutor Phase Execution Logic should sort phases by urgency",
          "status": "passed",
          "title": "should sort phases by urgency",
          "duration": 0.1296670000000404,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseExecutor", "Phase Recording"],
          "fullName": "MultiPhaseExecutor Phase Recording should record phase execution correctly",
          "status": "passed",
          "title": "should record phase execution correctly",
          "duration": 0.18425000000002,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseExecutor", "Phase Recording"],
          "fullName": "MultiPhaseExecutor Phase Recording should handle phase recording without optional parameters",
          "status": "passed",
          "title": "should handle phase recording without optional parameters",
          "duration": 0.07416599999999107,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseExecutor", "Phase Recording"],
          "fullName": "MultiPhaseExecutor Phase Recording should update executed phases set",
          "status": "passed",
          "title": "should update executed phases set",
          "duration": 0.14720899999997528,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseExecutor", "Phase Recording"],
          "fullName": "MultiPhaseExecutor Phase Recording should persist execution history",
          "status": "passed",
          "title": "should persist execution history",
          "duration": 0.08399999999994634,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseExecutor", "Phase Status Tracking"],
          "fullName": "MultiPhaseExecutor Phase Status Tracking should return correct phase status",
          "status": "passed",
          "title": "should return correct phase status",
          "duration": 0.12195900000006077,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseExecutor", "Phase Status Tracking"],
          "fullName": "MultiPhaseExecutor Phase Status Tracking should update status after phase execution",
          "status": "passed",
          "title": "should update status after phase execution",
          "duration": 0.08533299999999144,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseExecutor", "Phase Status Tracking"],
          "fullName": "MultiPhaseExecutor Phase Status Tracking should show no next phase when all phases are complete",
          "status": "passed",
          "title": "should show no next phase when all phases are complete",
          "duration": 0.08370800000000145,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseExecutor", "Summary Calculations"],
          "fullName": "MultiPhaseExecutor Summary Calculations should calculate execution summary correctly",
          "status": "passed",
          "title": "should calculate execution summary correctly",
          "duration": 0.0830829999999878,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseExecutor", "Summary Calculations"],
          "fullName": "MultiPhaseExecutor Summary Calculations should update summary after phase execution",
          "status": "passed",
          "title": "should update summary after phase execution",
          "duration": 0.0967919999999367,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseExecutor", "Summary Calculations"],
          "fullName": "MultiPhaseExecutor Summary Calculations should calculate fees correctly",
          "status": "passed",
          "title": "should calculate fees correctly",
          "duration": 0.055000000000063665,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseExecutor", "Summary Calculations"],
          "fullName": "MultiPhaseExecutor Summary Calculations should calculate execution efficiency",
          "status": "passed",
          "title": "should calculate execution efficiency",
          "duration": 0.06804199999999128,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseExecutor", "Phase Visualization"],
          "fullName": "MultiPhaseExecutor Phase Visualization should generate correct phase visualization",
          "status": "passed",
          "title": "should generate correct phase visualization",
          "duration": 0.035750000000007276,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseExecutor", "Phase Visualization"],
          "fullName": "MultiPhaseExecutor Phase Visualization should show completed phases correctly",
          "status": "passed",
          "title": "should show completed phases correctly",
          "duration": 0.03520800000001145,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseExecutor", "Phase Visualization"],
          "fullName": "MultiPhaseExecutor Phase Visualization should generate visualization with percentage",
          "status": "passed",
          "title": "should generate visualization with percentage",
          "duration": 0.033999999999991815,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseExecutor", "Execution Analytics"],
          "fullName": "MultiPhaseExecutor Execution Analytics should return empty analytics when no executions",
          "status": "passed",
          "title": "should return empty analytics when no executions",
          "duration": 0.03420899999991889,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseExecutor", "Execution Analytics"],
          "fullName": "MultiPhaseExecutor Execution Analytics should calculate analytics correctly after executions",
          "status": "passed",
          "title": "should calculate analytics correctly after executions",
          "duration": 0.03408300000000963,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseExecutor", "Execution Analytics"],
          "fullName": "MultiPhaseExecutor Execution Analytics should determine execution trend",
          "status": "passed",
          "title": "should determine execution trend",
          "duration": 0.03387499999996635,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseExecutor", "State Management"],
          "fullName": "MultiPhaseExecutor State Management should export state correctly",
          "status": "passed",
          "title": "should export state correctly",
          "duration": 0.37379200000009405,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseExecutor", "State Management"],
          "fullName": "MultiPhaseExecutor State Management should import state correctly",
          "status": "passed",
          "title": "should import state correctly",
          "duration": 0.08445899999992434,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseExecutor", "State Management"],
          "fullName": "MultiPhaseExecutor State Management should reset state correctly",
          "status": "passed",
          "title": "should reset state correctly",
          "duration": 0.06054099999994378,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseExecutor", "Utility Methods"],
          "fullName": "MultiPhaseExecutor Utility Methods should check completion status correctly",
          "status": "passed",
          "title": "should check completion status correctly",
          "duration": 0.058374999999955435,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseExecutor", "Utility Methods"],
          "fullName": "MultiPhaseExecutor Utility Methods should return remaining phases correctly",
          "status": "passed",
          "title": "should return remaining phases correctly",
          "duration": 0.09079200000007859,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseExecutor", "Edge Cases and Error Handling"],
          "fullName": "MultiPhaseExecutor Edge Cases and Error Handling should handle price at exactly the target",
          "status": "passed",
          "title": "should handle price at exactly the target",
          "duration": 0.07179199999995944,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseExecutor", "Edge Cases and Error Handling"],
          "fullName": "MultiPhaseExecutor Edge Cases and Error Handling should handle very small price movements",
          "status": "passed",
          "title": "should handle very small price movements",
          "duration": 0.0682089999999107,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseExecutor", "Edge Cases and Error Handling"],
          "fullName": "MultiPhaseExecutor Edge Cases and Error Handling should handle price below entry",
          "status": "passed",
          "title": "should handle price below entry",
          "duration": 0.07600000000002183,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseExecutor", "Edge Cases and Error Handling"],
          "fullName": "MultiPhaseExecutor Edge Cases and Error Handling should handle zero amounts gracefully",
          "status": "passed",
          "title": "should handle zero amounts gracefully",
          "duration": 0.07895799999994324,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseExecutor", "Edge Cases and Error Handling"],
          "fullName": "MultiPhaseExecutor Edge Cases and Error Handling should handle missing optional parameters",
          "status": "passed",
          "title": "should handle missing optional parameters",
          "duration": 0.387958000000026,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseExecutor", "Constructor Options"],
          "fullName": "MultiPhaseExecutor Constructor Options should initialize with existing execution state",
          "status": "passed",
          "title": "should initialize with existing execution state",
          "duration": 0.06545799999992141,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseExecutor", "Constructor Options"],
          "fullName": "MultiPhaseExecutor Constructor Options should handle strategyId and userId for database persistence",
          "status": "passed",
          "title": "should handle strategyId and userId for database persistence",
          "duration": 0.05820799999992232,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1750153231259,
      "endTime": 1750153231264.388,
      "status": "passed",
      "message": "",
      "name": "/Users/neo/Developer/mexc-sniper-bot/tests/unit/multi-phase-executor.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["MultiPhaseStrategyBuilder", "Basic Builder Functionality"],
          "fullName": "MultiPhaseStrategyBuilder Basic Builder Functionality should create builder with correct initial values",
          "status": "passed",
          "title": "should create builder with correct initial values",
          "duration": 1.9138749999999618,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseStrategyBuilder", "Basic Builder Functionality"],
          "fullName": "MultiPhaseStrategyBuilder Basic Builder Functionality should add single phase correctly",
          "status": "passed",
          "title": "should add single phase correctly",
          "duration": 0.4646660000000793,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseStrategyBuilder", "Basic Builder Functionality"],
          "fullName": "MultiPhaseStrategyBuilder Basic Builder Functionality should add multiple phases correctly",
          "status": "passed",
          "title": "should add multiple phases correctly",
          "duration": 0.20849999999995816,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseStrategyBuilder", "Basic Builder Functionality"],
          "fullName": "MultiPhaseStrategyBuilder Basic Builder Functionality should set description correctly",
          "status": "passed",
          "title": "should set description correctly",
          "duration": 0.13895899999999983,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseStrategyBuilder", "Basic Builder Functionality"],
          "fullName": "MultiPhaseStrategyBuilder Basic Builder Functionality should build complete strategy",
          "status": "passed",
          "title": "should build complete strategy",
          "duration": 0.34495800000001964,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseStrategyBuilder", "Predefined Strategy Methods"],
          "fullName": "MultiPhaseStrategyBuilder Predefined Strategy Methods should create conservative strategy",
          "status": "passed",
          "title": "should create conservative strategy",
          "duration": 0.3295829999999569,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseStrategyBuilder", "Predefined Strategy Methods"],
          "fullName": "MultiPhaseStrategyBuilder Predefined Strategy Methods should create conservative strategy with custom targets",
          "status": "passed",
          "title": "should create conservative strategy with custom targets",
          "duration": 0.12895800000001145,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseStrategyBuilder", "Predefined Strategy Methods"],
          "fullName": "MultiPhaseStrategyBuilder Predefined Strategy Methods should create aggressive strategy",
          "status": "passed",
          "title": "should create aggressive strategy",
          "duration": 0.20183299999996507,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseStrategyBuilder", "Predefined Strategy Methods"],
          "fullName": "MultiPhaseStrategyBuilder Predefined Strategy Methods should create scalping strategy",
          "status": "passed",
          "title": "should create scalping strategy",
          "duration": 0.22529099999997015,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseStrategyBuilder", "Predefined Strategy Methods"],
          "fullName": "MultiPhaseStrategyBuilder Predefined Strategy Methods should create DCA (Dollar Cost Averaging) strategy",
          "status": "passed",
          "title": "should create DCA (Dollar Cost Averaging) strategy",
          "duration": 0.20300000000008822,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseStrategyBuilder", "Validation"],
          "fullName": "MultiPhaseStrategyBuilder Validation should validate percentage values",
          "status": "passed",
          "title": "should validate percentage values",
          "duration": 0.4080830000000333,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseStrategyBuilder", "Validation"],
          "fullName": "MultiPhaseStrategyBuilder Validation should validate sell percentage values",
          "status": "passed",
          "title": "should validate sell percentage values",
          "duration": 0.11587499999995998,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseStrategyBuilder", "Validation"],
          "fullName": "MultiPhaseStrategyBuilder Validation should validate total sell percentage",
          "status": "passed",
          "title": "should validate total sell percentage",
          "duration": 0.07733299999995324,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseStrategyBuilder", "Validation"],
          "fullName": "MultiPhaseStrategyBuilder Validation should validate phase ordering",
          "status": "passed",
          "title": "should validate phase ordering",
          "duration": 0.07116600000006201,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseStrategyBuilder", "Validation"],
          "fullName": "MultiPhaseStrategyBuilder Validation should validate minimum phases",
          "status": "passed",
          "title": "should validate minimum phases",
          "duration": 0.06574999999997999,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseStrategyBuilder", "Validation"],
          "fullName": "MultiPhaseStrategyBuilder Validation should allow exactly 100% total sell percentage",
          "status": "passed",
          "title": "should allow exactly 100% total sell percentage",
          "duration": 0.1124169999999367,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseStrategyBuilder", "Method Chaining"],
          "fullName": "MultiPhaseStrategyBuilder Method Chaining should support fluent interface",
          "status": "passed",
          "title": "should support fluent interface",
          "duration": 0.126166000000012,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseStrategyBuilder", "Method Chaining"],
          "fullName": "MultiPhaseStrategyBuilder Method Chaining should support mixed method chaining",
          "status": "passed",
          "title": "should support mixed method chaining",
          "duration": 0.11454199999991488,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseStrategyBuilder", "Edge Cases"],
          "fullName": "MultiPhaseStrategyBuilder Edge Cases should handle single phase strategy",
          "status": "passed",
          "title": "should handle single phase strategy",
          "duration": 0.08916599999997743,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseStrategyBuilder", "Edge Cases"],
          "fullName": "MultiPhaseStrategyBuilder Edge Cases should handle many phases",
          "status": "passed",
          "title": "should handle many phases",
          "duration": 0.16324999999994816,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseStrategyBuilder", "Edge Cases"],
          "fullName": "MultiPhaseStrategyBuilder Edge Cases should handle decimal percentages",
          "status": "passed",
          "title": "should handle decimal percentages",
          "duration": 0.07408399999997073,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseStrategyBuilder", "Edge Cases"],
          "fullName": "MultiPhaseStrategyBuilder Edge Cases should reset builder state after build",
          "status": "passed",
          "title": "should reset builder state after build",
          "duration": 0.10312500000009095,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseStrategyBuilder", "Preview Functionality"],
          "fullName": "MultiPhaseStrategyBuilder Preview Functionality should preview without building",
          "status": "passed",
          "title": "should preview without building",
          "duration": 0.109833999999978,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseStrategyBuilder", "Preview Functionality"],
          "fullName": "MultiPhaseStrategyBuilder Preview Functionality should show intermediate state in preview",
          "status": "passed",
          "title": "should show intermediate state in preview",
          "duration": 0.12466700000004494,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["StrategyPatterns", "Momentum Pattern"],
          "fullName": "StrategyPatterns Momentum Pattern should create low momentum strategy",
          "status": "passed",
          "title": "should create low momentum strategy",
          "duration": 0.14724999999998545,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["StrategyPatterns", "Momentum Pattern"],
          "fullName": "StrategyPatterns Momentum Pattern should create medium momentum strategy",
          "status": "passed",
          "title": "should create medium momentum strategy",
          "duration": 0.10916699999995672,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["StrategyPatterns", "Momentum Pattern"],
          "fullName": "StrategyPatterns Momentum Pattern should create high momentum strategy",
          "status": "passed",
          "title": "should create high momentum strategy",
          "duration": 0.07770900000002712,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["StrategyPatterns", "Risk Adjusted Pattern"],
          "fullName": "StrategyPatterns Risk Adjusted Pattern should create strategy for small position",
          "status": "passed",
          "title": "should create strategy for small position",
          "duration": 0.09245800000007875,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["StrategyPatterns", "Risk Adjusted Pattern"],
          "fullName": "StrategyPatterns Risk Adjusted Pattern should create strategy for large position",
          "status": "passed",
          "title": "should create strategy for large position",
          "duration": 0.08066700000006222,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["StrategyPatterns", "Risk Adjusted Pattern"],
          "fullName": "StrategyPatterns Risk Adjusted Pattern should handle edge cases in position sizing",
          "status": "passed",
          "title": "should handle edge cases in position sizing",
          "duration": 0.1059579999999869,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["StrategyPatterns", "Volatility Adjusted Pattern"],
          "fullName": "StrategyPatterns Volatility Adjusted Pattern should create strategy for low volatility",
          "status": "passed",
          "title": "should create strategy for low volatility",
          "duration": 0.11429199999997763,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["StrategyPatterns", "Volatility Adjusted Pattern"],
          "fullName": "StrategyPatterns Volatility Adjusted Pattern should create strategy for high volatility",
          "status": "passed",
          "title": "should create strategy for high volatility",
          "duration": 0.10824999999999818,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["StrategyPatterns", "Volatility Adjusted Pattern"],
          "fullName": "StrategyPatterns Volatility Adjusted Pattern should handle extreme volatility values",
          "status": "passed",
          "title": "should handle extreme volatility values",
          "duration": 0.12408300000004147,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["StrategyPatterns", "Market Condition Pattern"],
          "fullName": "StrategyPatterns Market Condition Pattern should create bullish market strategy",
          "status": "passed",
          "title": "should create bullish market strategy",
          "duration": 0.19204099999990376,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["StrategyPatterns", "Market Condition Pattern"],
          "fullName": "StrategyPatterns Market Condition Pattern should create bearish market strategy",
          "status": "passed",
          "title": "should create bearish market strategy",
          "duration": 0.13620900000000802,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["StrategyPatterns", "Market Condition Pattern"],
          "fullName": "StrategyPatterns Market Condition Pattern should create neutral market strategy",
          "status": "passed",
          "title": "should create neutral market strategy",
          "duration": 0.10424999999997908,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["StrategyPatterns", "Market Condition Pattern"],
          "fullName": "StrategyPatterns Market Condition Pattern should handle sideways market strategy",
          "status": "passed",
          "title": "should handle sideways market strategy",
          "duration": 0.12195899999994708,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["StrategyPatterns", "Pattern Integration"],
          "fullName": "StrategyPatterns Pattern Integration should create consistent strategies across patterns",
          "status": "passed",
          "title": "should create consistent strategies across patterns",
          "duration": 0.46945800000003146,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["StrategyPatterns", "Pattern Integration"],
          "fullName": "StrategyPatterns Pattern Integration should maintain pattern characteristics",
          "status": "passed",
          "title": "should maintain pattern characteristics",
          "duration": 0.17000000000007276,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1750153229905,
      "endTime": 1750153229914.17,
      "status": "passed",
      "message": "",
      "name": "/Users/neo/Developer/mexc-sniper-bot/tests/unit/multi-phase-strategy-builder.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["MultiPhaseTradingBot", "Price Update Processing"],
          "fullName": "MultiPhaseTradingBot Price Update Processing should process price updates correctly",
          "status": "passed",
          "title": "should process price updates correctly",
          "duration": 1.3990830000000187,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseTradingBot", "Price Update Processing"],
          "fullName": "MultiPhaseTradingBot Price Update Processing should execute phase when target is reached",
          "status": "passed",
          "title": "should execute phase when target is reached",
          "duration": 0.4188339999999471,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseTradingBot", "Price Update Processing"],
          "fullName": "MultiPhaseTradingBot Price Update Processing should execute multiple phases when price jumps significantly",
          "status": "passed",
          "title": "should execute multiple phases when price jumps significantly",
          "duration": 0.27491699999995944,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseTradingBot", "Price Update Processing"],
          "fullName": "MultiPhaseTradingBot Price Update Processing should not re-execute completed phases",
          "status": "passed",
          "title": "should not re-execute completed phases",
          "duration": 0.17316699999992125,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseTradingBot", "Price Update Processing"],
          "fullName": "MultiPhaseTradingBot Price Update Processing should show correct visualization",
          "status": "passed",
          "title": "should show correct visualization",
          "duration": 0.13599999999996726,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseTradingBot", "Bot Status and Metrics"],
          "fullName": "MultiPhaseTradingBot Bot Status and Metrics should return correct bot status",
          "status": "passed",
          "title": "should return correct bot status",
          "duration": 0.13458300000002055,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseTradingBot", "Bot Status and Metrics"],
          "fullName": "MultiPhaseTradingBot Bot Status and Metrics should track completion percentage correctly",
          "status": "passed",
          "title": "should track completion percentage correctly",
          "duration": 0.08087499999999181,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseTradingBot", "Bot Status and Metrics"],
          "fullName": "MultiPhaseTradingBot Bot Status and Metrics should show complete when all phases are executed",
          "status": "passed",
          "title": "should show complete when all phases are executed",
          "duration": 0.15762499999993906,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseTradingBot", "Bot Status and Metrics"],
          "fullName": "MultiPhaseTradingBot Bot Status and Metrics should update position size correctly",
          "status": "passed",
          "title": "should update position size correctly",
          "duration": 0.06408400000009351,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseTradingBot", "Performance Summary"],
          "fullName": "MultiPhaseTradingBot Performance Summary should calculate performance metrics correctly",
          "status": "passed",
          "title": "should calculate performance metrics correctly",
          "duration": 0.2501670000000331,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseTradingBot", "Performance Summary"],
          "fullName": "MultiPhaseTradingBot Performance Summary should track best and worst phase execution",
          "status": "passed",
          "title": "should track best and worst phase execution",
          "duration": 0.10050000000001091,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseTradingBot", "Performance Summary"],
          "fullName": "MultiPhaseTradingBot Performance Summary should calculate efficiency metrics",
          "status": "passed",
          "title": "should calculate efficiency metrics",
          "duration": 0.10016700000005585,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseTradingBot", "Price Movement Simulation"],
          "fullName": "MultiPhaseTradingBot Price Movement Simulation should simulate price movements correctly",
          "status": "passed",
          "title": "should simulate price movements correctly",
          "duration": 0.2399159999999938,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseTradingBot", "Price Movement Simulation"],
          "fullName": "MultiPhaseTradingBot Price Movement Simulation should track cumulative performance through simulation",
          "status": "passed",
          "title": "should track cumulative performance through simulation",
          "duration": 0.07991600000002563,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseTradingBot", "State Management"],
          "fullName": "MultiPhaseTradingBot State Management should export and import state correctly",
          "status": "passed",
          "title": "should export and import state correctly",
          "duration": 0.15362499999991996,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseTradingBot", "State Management"],
          "fullName": "MultiPhaseTradingBot State Management should reset to initial state",
          "status": "passed",
          "title": "should reset to initial state",
          "duration": 0.07524999999998272,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseTradingBot", "Risk Metrics"],
          "fullName": "MultiPhaseTradingBot Risk Metrics should calculate risk metrics correctly",
          "status": "passed",
          "title": "should calculate risk metrics correctly",
          "duration": 0.11212499999999181,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseTradingBot", "Risk Metrics"],
          "fullName": "MultiPhaseTradingBot Risk Metrics should calculate drawdown for losses",
          "status": "passed",
          "title": "should calculate drawdown for losses",
          "duration": 0.04862500000001546,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseTradingBot", "Risk Metrics"],
          "fullName": "MultiPhaseTradingBot Risk Metrics should provide meaningful risk-reward ratios",
          "status": "passed",
          "title": "should provide meaningful risk-reward ratios",
          "duration": 0.04212499999994179,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseTradingBot", "Different Strategy Configurations"],
          "fullName": "MultiPhaseTradingBot Different Strategy Configurations should work with conservative strategy",
          "status": "passed",
          "title": "should work with conservative strategy",
          "duration": 0.09579099999996288,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseTradingBot", "Different Strategy Configurations"],
          "fullName": "MultiPhaseTradingBot Different Strategy Configurations should work with aggressive strategy",
          "status": "passed",
          "title": "should work with aggressive strategy",
          "duration": 0.08600000000001273,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseTradingBot", "Different Strategy Configurations"],
          "fullName": "MultiPhaseTradingBot Different Strategy Configurations should work with scalping strategy",
          "status": "passed",
          "title": "should work with scalping strategy",
          "duration": 0.07200000000000273,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["MultiPhaseTradingBot", "Different Strategy Configurations"],
          "fullName": "MultiPhaseTradingBot Different Strategy Configurations should work with diamond hands strategy",
          "status": "passed",
          "title": "should work with diamond hands strategy",
          "duration": 0.07037500000001273,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["AdvancedMultiPhaseTradingBot", "Strategy Switching"],
          "fullName": "AdvancedMultiPhaseTradingBot Strategy Switching should switch strategies successfully",
          "status": "passed",
          "title": "should switch strategies successfully",
          "duration": 0.11329200000000128,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["AdvancedMultiPhaseTradingBot", "Strategy Switching"],
          "fullName": "AdvancedMultiPhaseTradingBot Strategy Switching should fail to switch to non-existent strategy",
          "status": "passed",
          "title": "should fail to switch to non-existent strategy",
          "duration": 0.05254100000001927,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["AdvancedMultiPhaseTradingBot", "Strategy Switching"],
          "fullName": "AdvancedMultiPhaseTradingBot Strategy Switching should list available strategies",
          "status": "passed",
          "title": "should list available strategies",
          "duration": 0.3208750000000009,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["AdvancedMultiPhaseTradingBot", "Strategy Switching"],
          "fullName": "AdvancedMultiPhaseTradingBot Strategy Switching should get current strategy information",
          "status": "passed",
          "title": "should get current strategy information",
          "duration": 0.0701249999999618,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["AdvancedMultiPhaseTradingBot", "Advanced Features"],
          "fullName": "AdvancedMultiPhaseTradingBot Advanced Features should maintain execution state when switching strategies",
          "status": "passed",
          "title": "should maintain execution state when switching strategies",
          "duration": 0.07962499999996453,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["AdvancedMultiPhaseTradingBot", "Advanced Features"],
          "fullName": "AdvancedMultiPhaseTradingBot Advanced Features should preserve state across strategy switches",
          "status": "passed",
          "title": "should preserve state across strategy switches",
          "duration": 0.05624999999997726,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["AdvancedMultiPhaseTradingBot", "Integration with Base Bot Features"],
          "fullName": "AdvancedMultiPhaseTradingBot Integration with Base Bot Features should inherit all base bot functionality",
          "status": "passed",
          "title": "should inherit all base bot functionality",
          "duration": 0.06666600000005474,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["AdvancedMultiPhaseTradingBot", "Integration with Base Bot Features"],
          "fullName": "AdvancedMultiPhaseTradingBot Integration with Base Bot Features should work with inherited methods after strategy switch",
          "status": "passed",
          "title": "should work with inherited methods after strategy switch",
          "duration": 0.07674999999994725,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1750153230587,
      "endTime": 1750153230592.3208,
      "status": "passed",
      "message": "",
      "name": "/Users/neo/Developer/mexc-sniper-bot/tests/unit/multi-phase-trading-bot.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "OptimizedAutoExitManager Performance Tests",
            "Batch Processing Performance"
          ],
          "fullName": "OptimizedAutoExitManager Performance Tests Batch Processing Performance should handle batch price fetching efficiently",
          "status": "passed",
          "title": "should handle batch price fetching efficiently",
          "duration": 4.105207999999948,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "OptimizedAutoExitManager Performance Tests",
            "Batch Processing Performance"
          ],
          "fullName": "OptimizedAutoExitManager Performance Tests Batch Processing Performance should process positions in efficient batches",
          "status": "passed",
          "title": "should process positions in efficient batches",
          "duration": 1796.485291,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "OptimizedAutoExitManager Performance Tests",
            "Database Query Optimization"
          ],
          "fullName": "OptimizedAutoExitManager Performance Tests Database Query Optimization should use JOIN queries instead of N+1 patterns",
          "status": "passed",
          "title": "should use JOIN queries instead of N+1 patterns",
          "duration": 355.77887499999997,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "OptimizedAutoExitManager Performance Tests",
            "Database Query Optimization"
          ],
          "fullName": "OptimizedAutoExitManager Performance Tests Database Query Optimization should handle large datasets efficiently",
          "status": "passed",
          "title": "should handle large datasets efficiently",
          "duration": 358.7557079999997,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["OptimizedAutoExitManager Performance Tests", "Price Caching System"],
          "fullName": "OptimizedAutoExitManager Performance Tests Price Caching System should cache prices for configured TTL",
          "status": "passed",
          "title": "should cache prices for configured TTL",
          "duration": 0.6829589999997552,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["OptimizedAutoExitManager Performance Tests", "Price Caching System"],
          "fullName": "OptimizedAutoExitManager Performance Tests Price Caching System should clean up expired cache entries",
          "status": "passed",
          "title": "should clean up expired cache entries",
          "duration": 0.33837499999981446,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "OptimizedAutoExitManager Performance Tests",
            "Monitoring Status and Metrics"
          ],
          "fullName": "OptimizedAutoExitManager Performance Tests Monitoring Status and Metrics should provide comprehensive status information",
          "status": "passed",
          "title": "should provide comprehensive status information",
          "duration": 0.5698330000000169,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "OptimizedAutoExitManager Performance Tests",
            "Monitoring Status and Metrics"
          ],
          "fullName": "OptimizedAutoExitManager Performance Tests Monitoring Status and Metrics should track monitoring state correctly",
          "status": "passed",
          "title": "should track monitoring state correctly",
          "duration": 353.60129199999983,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "OptimizedAutoExitManager Performance Tests",
            "Exit Condition Evaluation"
          ],
          "fullName": "OptimizedAutoExitManager Performance Tests Exit Condition Evaluation should evaluate stop-loss conditions efficiently",
          "status": "passed",
          "title": "should evaluate stop-loss conditions efficiently",
          "duration": 0.6838749999997162,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "OptimizedAutoExitManager Performance Tests",
            "Performance Benchmarks"
          ],
          "fullName": "OptimizedAutoExitManager Performance Tests Performance Benchmarks should outperform the original AutoExitManager",
          "status": "passed",
          "title": "should outperform the original AutoExitManager",
          "duration": 352.7308750000002,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "OptimizedAutoExitManager Performance Tests",
            "Performance Benchmarks"
          ],
          "fullName": "OptimizedAutoExitManager Performance Tests Performance Benchmarks should maintain low memory footprint",
          "status": "passed",
          "title": "should maintain low memory footprint",
          "duration": 0.9824579999994967,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1750153218883,
      "endTime": 1750153222108.9824,
      "status": "passed",
      "message": "",
      "name": "/Users/neo/Developer/mexc-sniper-bot/tests/unit/optimized-auto-exit-manager.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["SecureEncryptionService", "Constructor"],
          "fullName": "SecureEncryptionService Constructor should throw error if ENCRYPTION_MASTER_KEY is not set",
          "status": "passed",
          "title": "should throw error if ENCRYPTION_MASTER_KEY is not set",
          "duration": 0.976415999999972,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["SecureEncryptionService", "Constructor"],
          "fullName": "SecureEncryptionService Constructor should throw error if key is too short",
          "status": "passed",
          "title": "should throw error if key is too short",
          "duration": 0.16649999999992815,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["SecureEncryptionService", "Constructor"],
          "fullName": "SecureEncryptionService Constructor should throw error if key is not valid base64",
          "status": "passed",
          "title": "should throw error if key is not valid base64",
          "duration": 0.11566700000003038,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["SecureEncryptionService", "Encryption and Decryption"],
          "fullName": "SecureEncryptionService Encryption and Decryption should encrypt and decrypt a string correctly",
          "status": "passed",
          "title": "should encrypt and decrypt a string correctly",
          "duration": 25.032749999999965,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["SecureEncryptionService", "Encryption and Decryption"],
          "fullName": "SecureEncryptionService Encryption and Decryption should produce different ciphertext for same input (due to random salt/nonce)",
          "status": "passed",
          "title": "should produce different ciphertext for same input (due to random salt/nonce)",
          "duration": 48.664041,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["SecureEncryptionService", "Encryption and Decryption"],
          "fullName": "SecureEncryptionService Encryption and Decryption should handle empty strings",
          "status": "passed",
          "title": "should handle empty strings",
          "duration": 24.544417000000067,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["SecureEncryptionService", "Encryption and Decryption"],
          "fullName": "SecureEncryptionService Encryption and Decryption should handle long strings",
          "status": "passed",
          "title": "should handle long strings",
          "duration": 24.066958,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["SecureEncryptionService", "Encryption and Decryption"],
          "fullName": "SecureEncryptionService Encryption and Decryption should handle special characters",
          "status": "passed",
          "title": "should handle special characters",
          "duration": 24.021749999999997,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["SecureEncryptionService", "Encryption and Decryption"],
          "fullName": "SecureEncryptionService Encryption and Decryption should handle Unicode characters",
          "status": "passed",
          "title": "should handle Unicode characters",
          "duration": 24.23454199999992,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["SecureEncryptionService", "Encryption and Decryption"],
          "fullName": "SecureEncryptionService Encryption and Decryption should fail to decrypt tampered data",
          "status": "passed",
          "title": "should fail to decrypt tampered data",
          "duration": 0.11029200000007222,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["SecureEncryptionService", "Encryption and Decryption"],
          "fullName": "SecureEncryptionService Encryption and Decryption should fail to decrypt invalid format",
          "status": "passed",
          "title": "should fail to decrypt invalid format",
          "duration": 0.06099999999992178,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["SecureEncryptionService", "Format Validation"],
          "fullName": "SecureEncryptionService Format Validation should validate correctly encrypted format",
          "status": "passed",
          "title": "should validate correctly encrypted format",
          "duration": 12.05808300000001,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["SecureEncryptionService", "Format Validation"],
          "fullName": "SecureEncryptionService Format Validation should reject invalid formats",
          "status": "passed",
          "title": "should reject invalid formats",
          "duration": 0.14512500000000728,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["SecureEncryptionService", "Reencryption"],
          "fullName": "SecureEncryptionService Reencryption should reencrypt data with new salt/nonce",
          "status": "passed",
          "title": "should reencrypt data with new salt/nonce",
          "duration": 48.23675000000003,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["SecureEncryptionService", "Static Methods"],
          "fullName": "SecureEncryptionService Static Methods should generate secure random keys",
          "status": "passed",
          "title": "should generate secure random keys",
          "duration": 0.2556250000000091,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["SecureEncryptionService", "Static Methods"],
          "fullName": "SecureEncryptionService Static Methods should mask sensitive data correctly",
          "status": "passed",
          "title": "should mask sensitive data correctly",
          "duration": 0.1263330000000451,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["SecureEncryptionService", "Singleton Pattern"],
          "fullName": "SecureEncryptionService Singleton Pattern should return same instance",
          "status": "passed",
          "title": "should return same instance",
          "duration": 0.06204200000001947,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["SecureEncryptionService", "Performance"],
          "fullName": "SecureEncryptionService Performance should encrypt/decrypt within reasonable time",
          "status": "passed",
          "title": "should encrypt/decrypt within reasonable time",
          "duration": 248.84583399999997,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1750153227311,
      "endTime": 1750153227792.846,
      "status": "passed",
      "message": "",
      "name": "/Users/neo/Developer/mexc-sniper-bot/tests/unit/secure-encryption-service.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["TradingStrategyManager", "Predefined Strategies"],
          "fullName": "TradingStrategyManager Predefined Strategies should have all 5 predefined strategies",
          "status": "passed",
          "title": "should have all 5 predefined strategies",
          "duration": 0.9538340000000289,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["TradingStrategyManager", "Predefined Strategies"],
          "fullName": "TradingStrategyManager Predefined Strategies should have correct normal strategy configuration",
          "status": "passed",
          "title": "should have correct normal strategy configuration",
          "duration": 0.2639159999999947,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["TradingStrategyManager", "Predefined Strategies"],
          "fullName": "TradingStrategyManager Predefined Strategies should have correct highPriceIncrease strategy configuration",
          "status": "passed",
          "title": "should have correct highPriceIncrease strategy configuration",
          "duration": 0.2671250000000782,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["TradingStrategyManager", "Predefined Strategies"],
          "fullName": "TradingStrategyManager Predefined Strategies should have correct conservative strategy configuration",
          "status": "passed",
          "title": "should have correct conservative strategy configuration",
          "duration": 0.16237499999999727,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["TradingStrategyManager", "Predefined Strategies"],
          "fullName": "TradingStrategyManager Predefined Strategies should have correct scalping strategy configuration",
          "status": "passed",
          "title": "should have correct scalping strategy configuration",
          "duration": 0.11654199999998127,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["TradingStrategyManager", "Predefined Strategies"],
          "fullName": "TradingStrategyManager Predefined Strategies should have correct diamond strategy configuration",
          "status": "passed",
          "title": "should have correct diamond strategy configuration",
          "duration": 0.11845800000003237,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["TradingStrategyManager", "Strategy Manager Functionality"],
          "fullName": "TradingStrategyManager Strategy Manager Functionality should initialize with normal strategy as default",
          "status": "passed",
          "title": "should initialize with normal strategy as default",
          "duration": 0.06570799999997234,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["TradingStrategyManager", "Strategy Manager Functionality"],
          "fullName": "TradingStrategyManager Strategy Manager Functionality should switch strategies correctly",
          "status": "passed",
          "title": "should switch strategies correctly",
          "duration": 0.0678330000000642,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["TradingStrategyManager", "Strategy Manager Functionality"],
          "fullName": "TradingStrategyManager Strategy Manager Functionality should return false for invalid strategy ID",
          "status": "passed",
          "title": "should return false for invalid strategy ID",
          "duration": 0.06733300000007603,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["TradingStrategyManager", "Strategy Manager Functionality"],
          "fullName": "TradingStrategyManager Strategy Manager Functionality should list all available strategies",
          "status": "passed",
          "title": "should list all available strategies",
          "duration": 0.09712500000000546,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["TradingStrategyManager", "Strategy Manager Functionality"],
          "fullName": "TradingStrategyManager Strategy Manager Functionality should get strategy by ID",
          "status": "passed",
          "title": "should get strategy by ID",
          "duration": 0.078125,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["TradingStrategyManager", "Strategy Manager Functionality"],
          "fullName": "TradingStrategyManager Strategy Manager Functionality should return null for non-existent strategy",
          "status": "passed",
          "title": "should return null for non-existent strategy",
          "duration": 0.06512500000008004,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["TradingStrategyManager", "Sell Recommendations"],
          "fullName": "TradingStrategyManager Sell Recommendations should recommend sell when price hits first phase target",
          "status": "passed",
          "title": "should recommend sell when price hits first phase target",
          "duration": 0.5639169999999467,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["TradingStrategyManager", "Sell Recommendations"],
          "fullName": "TradingStrategyManager Sell Recommendations should recommend multiple phases when price hits multiple targets",
          "status": "passed",
          "title": "should recommend multiple phases when price hits multiple targets",
          "duration": 0.11237499999992906,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["TradingStrategyManager", "Sell Recommendations"],
          "fullName": "TradingStrategyManager Sell Recommendations should not recommend sell when price is below targets",
          "status": "passed",
          "title": "should not recommend sell when price is below targets",
          "duration": 0.08291699999995217,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["TradingStrategyManager", "Sell Recommendations"],
          "fullName": "TradingStrategyManager Sell Recommendations should calculate correct profit expectations",
          "status": "passed",
          "title": "should calculate correct profit expectations",
          "duration": 0.08320800000001327,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["TradingStrategyManager", "Strategy Import/Export"],
          "fullName": "TradingStrategyManager Strategy Import/Export should export strategy correctly",
          "status": "passed",
          "title": "should export strategy correctly",
          "duration": 0.06829199999992852,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["TradingStrategyManager", "Strategy Import/Export"],
          "fullName": "TradingStrategyManager Strategy Import/Export should import strategy correctly",
          "status": "passed",
          "title": "should import strategy correctly",
          "duration": 0.7949169999999413,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["TradingStrategyManager", "Strategy Import/Export"],
          "fullName": "TradingStrategyManager Strategy Import/Export should not import invalid strategy",
          "status": "passed",
          "title": "should not import invalid strategy",
          "duration": 0.04933300000004692,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["TradingStrategyManager", "Strategy Import/Export"],
          "fullName": "TradingStrategyManager Strategy Import/Export should validate strategy structure on import",
          "status": "passed",
          "title": "should validate strategy structure on import",
          "duration": 0.04624999999998636,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["TradingStrategyManager", "Edge Cases"],
          "fullName": "TradingStrategyManager Edge Cases should handle zero entry price gracefully",
          "status": "passed",
          "title": "should handle zero entry price gracefully",
          "duration": 0.08154099999990194,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["TradingStrategyManager", "Edge Cases"],
          "fullName": "TradingStrategyManager Edge Cases should handle negative prices gracefully",
          "status": "passed",
          "title": "should handle negative prices gracefully",
          "duration": 0.08329199999991488,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["TradingStrategyManager", "Edge Cases"],
          "fullName": "TradingStrategyManager Edge Cases should handle very large price increases",
          "status": "passed",
          "title": "should handle very large price increases",
          "duration": 0.07724999999993543,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["TradingStrategyManager", "Edge Cases"],
          "fullName": "TradingStrategyManager Edge Cases should maintain precision with decimal calculations",
          "status": "passed",
          "title": "should maintain precision with decimal calculations",
          "duration": 0.08175000000005639,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1750153231930,
      "endTime": 1750153231934.0833,
      "status": "passed",
      "message": "",
      "name": "/Users/neo/Developer/mexc-sniper-bot/tests/unit/trading-strategy-manager.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["TransactionLockService", "Lock Acquisition"],
          "fullName": "TransactionLockService Lock Acquisition should acquire lock for new resource",
          "status": "passed",
          "title": "should acquire lock for new resource",
          "duration": 3197.559,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["TransactionLockService", "Lock Acquisition"],
          "fullName": "TransactionLockService Lock Acquisition should prevent duplicate trades with same idempotency key",
          "status": "failed",
          "title": "should prevent duplicate trades with same idempotency key",
          "duration": 2796.717125,
          "failureMessages": [
            "AssertionError: expected true to be false // Object.is equality\n    at /Users/neo/Developer/mexc-sniper-bot/tests/unit/transaction-lock-service.test.ts:77:31\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at file:///Users/neo/Developer/mexc-sniper-bot/node_modules/@vitest/runner/dist/chunk-hooks.js:752:20"
          ],
          "meta": {}
        },
        {
          "ancestorTitles": ["TransactionLockService", "Lock Acquisition"],
          "fullName": "TransactionLockService Lock Acquisition should queue requests when resource is locked",
          "status": "passed",
          "title": "should queue requests when resource is locked",
          "duration": 3140.5041250000004,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["TransactionLockService", "Lock Acquisition"],
          "fullName": "TransactionLockService Lock Acquisition should allow different resources to be locked simultaneously",
          "status": "passed",
          "title": "should allow different resources to be locked simultaneously",
          "duration": 2797.3634999999995,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["TransactionLockService", "Lock Release"],
          "fullName": "TransactionLockService Lock Release should release lock successfully",
          "status": "passed",
          "title": "should release lock successfully",
          "duration": 3153.5588340000013,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["TransactionLockService", "Lock Release"],
          "fullName": "TransactionLockService Lock Release should store result when releasing lock",
          "status": "passed",
          "title": "should store result when releasing lock",
          "duration": 3159.951499999999,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["TransactionLockService", "Execute With Lock"],
          "fullName": "TransactionLockService Execute With Lock should execute transaction with lock protection",
          "status": "passed",
          "title": "should execute transaction with lock protection",
          "duration": 2787.1377500000017,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["TransactionLockService", "Execute With Lock"],
          "fullName": "TransactionLockService Execute With Lock should prevent concurrent execution of same resource",
          "status": "passed",
          "title": "should prevent concurrent execution of same resource",
          "duration": 4283.161040999999,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["TransactionLockService", "Execute With Lock"],
          "fullName": "TransactionLockService Execute With Lock should handle executor errors gracefully",
          "status": "passed",
          "title": "should handle executor errors gracefully",
          "duration": 3174.2277079999985,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["TransactionLockService", "Execute With Lock"],
          "fullName": "TransactionLockService Execute With Lock should return existing result for duplicate idempotency key",
          "status": "passed",
          "title": "should return existing result for duplicate idempotency key",
          "duration": 3192.8982910000013,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["TransactionLockService", "Lock Status"],
          "fullName": "TransactionLockService Lock Status should report correct lock status",
          "status": "passed",
          "title": "should report correct lock status",
          "duration": 3176.3749580000003,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["TransactionLockService", "Queue Management"],
          "fullName": "TransactionLockService Queue Management should process queue in priority order",
          "status": "passed",
          "title": "should process queue in priority order",
          "duration": 8145.717582999998,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["TransactionLockService", "Cleanup Process"],
          "fullName": "TransactionLockService Cleanup Process should identify expired locks",
          "status": "passed",
          "title": "should identify expired locks",
          "duration": 3672.256499999996,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1750153218815,
      "endTime": 1750153265493.2566,
      "status": "failed",
      "message": "",
      "name": "/Users/neo/Developer/mexc-sniper-bot/tests/unit/transaction-lock-service.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Transactions Table", "Transaction Creation"],
          "fullName": "Transactions Table Transaction Creation should create a buy transaction",
          "status": "passed",
          "title": "should create a buy transaction",
          "duration": 716.7050829999998,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Transactions Table", "Transaction Creation"],
          "fullName": "Transactions Table Transaction Creation should create a sell transaction",
          "status": "passed",
          "title": "should create a sell transaction",
          "duration": 719.609375,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Transactions Table", "Transaction Creation"],
          "fullName": "Transactions Table Transaction Creation should create a complete trade with profit/loss calculation",
          "status": "passed",
          "title": "should create a complete trade with profit/loss calculation",
          "duration": 723.4076249999998,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Transactions Table", "Transaction Creation"],
          "fullName": "Transactions Table Transaction Creation should create a loss transaction",
          "status": "passed",
          "title": "should create a loss transaction",
          "duration": 719.6407920000001,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Transactions Table", "Transaction Queries"],
          "fullName": "Transactions Table Transaction Queries should fetch user transactions ordered by time",
          "status": "passed",
          "title": "should fetch user transactions ordered by time",
          "duration": 2135.7028330000003,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Transactions Table", "Transaction Queries"],
          "fullName": "Transactions Table Transaction Queries should calculate total profit/loss for user",
          "status": "passed",
          "title": "should calculate total profit/loss for user",
          "duration": 2144.506292,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Transactions Table", "Transaction Queries"],
          "fullName": "Transactions Table Transaction Queries should filter profitable vs losing trades",
          "status": "passed",
          "title": "should filter profitable vs losing trades",
          "duration": 2159.992124999999,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Transactions Table", "Transaction Queries"],
          "fullName": "Transactions Table Transaction Queries should get transactions by symbol",
          "status": "passed",
          "title": "should get transactions by symbol",
          "duration": 2165.307917,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Transactions Table", "Transaction Status Management"],
          "fullName": "Transactions Table Transaction Status Management should default to pending status",
          "status": "passed",
          "title": "should default to pending status",
          "duration": 717.1115000000009,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Transactions Table", "Transaction Status Management"],
          "fullName": "Transactions Table Transaction Status Management should update transaction status",
          "status": "passed",
          "title": "should update transaction status",
          "duration": 1437.7424999999967,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Transactions Table", "Data Validation"],
          "fullName": "Transactions Table Data Validation should require userId and transactionType",
          "status": "passed",
          "title": "should require userId and transactionType",
          "duration": 726.9908329999998,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Transactions Table", "Data Validation"],
          "fullName": "Transactions Table Data Validation should handle null values for optional fields",
          "status": "passed",
          "title": "should handle null values for optional fields",
          "duration": 716.7693749999999,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1750153222073,
      "endTime": 1750153237157.7693,
      "status": "passed",
      "message": "",
      "name": "/Users/neo/Developer/mexc-sniper-bot/tests/unit/transactions.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["/api/user-preferences", "User preferences data structure"],
          "fullName": "/api/user-preferences User preferences data structure should validate default user preferences structure",
          "status": "passed",
          "title": "should validate default user preferences structure",
          "duration": 1.2560419999999795,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["/api/user-preferences", "User preferences data structure"],
          "fullName": "/api/user-preferences User preferences data structure should validate take profit levels structure",
          "status": "passed",
          "title": "should validate take profit levels structure",
          "duration": 0.2002909999999929,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["/api/user-preferences", "User preferences data structure"],
          "fullName": "/api/user-preferences User preferences data structure should validate ready state pattern format",
          "status": "passed",
          "title": "should validate ready state pattern format",
          "duration": 0.35045800000000327,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["/api/user-preferences", "User preferences data structure"],
          "fullName": "/api/user-preferences User preferences data structure should validate risk tolerance options",
          "status": "passed",
          "title": "should validate risk tolerance options",
          "duration": 0.2557080000000269,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["/api/user-preferences", "User preferences data structure"],
          "fullName": "/api/user-preferences User preferences data structure should validate interval configuration",
          "status": "passed",
          "title": "should validate interval configuration",
          "duration": 0.10962499999993724,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["/api/user-preferences", "Request validation logic"],
          "fullName": "/api/user-preferences Request validation logic should validate required fields for user preferences",
          "status": "passed",
          "title": "should validate required fields for user preferences",
          "duration": 0.4426660000000311,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1750153233274,
      "endTime": 1750153233276.4426,
      "status": "passed",
      "message": "",
      "name": "/Users/neo/Developer/mexc-sniper-bot/tests/unit/user-preferences.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Utils", "cn function"],
          "fullName": "Utils cn function should merge class names correctly",
          "status": "passed",
          "title": "should merge class names correctly",
          "duration": 3.557207999999946,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Utils", "cn function"],
          "fullName": "Utils cn function should handle conditional classes",
          "status": "passed",
          "title": "should handle conditional classes",
          "duration": 0.1490000000000009,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Utils", "cn function"],
          "fullName": "Utils cn function should handle overlapping Tailwind classes",
          "status": "passed",
          "title": "should handle overlapping Tailwind classes",
          "duration": 0.14208299999995688,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Utils", "cn function"],
          "fullName": "Utils cn function should handle empty inputs",
          "status": "passed",
          "title": "should handle empty inputs",
          "duration": 0.0810830000000351,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Utils", "cn function"],
          "fullName": "Utils cn function should handle null and undefined inputs",
          "status": "passed",
          "title": "should handle null and undefined inputs",
          "duration": 0.08170900000004622,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Utils", "cn function"],
          "fullName": "Utils cn function should handle object notation",
          "status": "passed",
          "title": "should handle object notation",
          "duration": 0.08112500000004275,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1750153232602,
      "endTime": 1750153232606.149,
      "status": "passed",
      "message": "",
      "name": "/Users/neo/Developer/mexc-sniper-bot/tests/unit/utils.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Project Verification Tests", "Python Cleanup Verification"],
          "fullName": "Project Verification Tests Python Cleanup Verification should have no Python source files in src directory",
          "status": "passed",
          "title": "should have no Python source files in src directory",
          "duration": 2.64979100000005,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Project Verification Tests", "Python Cleanup Verification"],
          "fullName": "Project Verification Tests Python Cleanup Verification should not have Python configuration files",
          "status": "passed",
          "title": "should not have Python configuration files",
          "duration": 0.2320830000001024,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Project Verification Tests", "Python Cleanup Verification"],
          "fullName": "Project Verification Tests Python Cleanup Verification should not have Python API directory",
          "status": "passed",
          "title": "should not have Python API directory",
          "duration": 0.08749999999997726,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Project Verification Tests",
            "TypeScript Implementation Verification"
          ],
          "fullName": "Project Verification Tests TypeScript Implementation Verification should have all required TypeScript agent files",
          "status": "passed",
          "title": "should have all required TypeScript agent files",
          "duration": 0.14637499999992087,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Project Verification Tests",
            "TypeScript Implementation Verification"
          ],
          "fullName": "Project Verification Tests TypeScript Implementation Verification should have all API trigger routes",
          "status": "passed",
          "title": "should have all API trigger routes",
          "duration": 0.12249999999994543,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Project Verification Tests",
            "TypeScript Implementation Verification"
          ],
          "fullName": "Project Verification Tests TypeScript Implementation Verification should have database layer implemented",
          "status": "passed",
          "title": "should have database layer implemented",
          "duration": 0.09558300000003328,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": [
            "Project Verification Tests",
            "TypeScript Implementation Verification"
          ],
          "fullName": "Project Verification Tests TypeScript Implementation Verification should have testing infrastructure",
          "status": "passed",
          "title": "should have testing infrastructure",
          "duration": 0.12062500000001819,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Project Verification Tests", "Configuration Verification"],
          "fullName": "Project Verification Tests Configuration Verification should have clean package.json without Python dependencies",
          "status": "passed",
          "title": "should have clean package.json without Python dependencies",
          "duration": 0.38204099999995833,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Project Verification Tests", "Configuration Verification"],
          "fullName": "Project Verification Tests Configuration Verification should have clean Next.js configuration",
          "status": "passed",
          "title": "should have clean Next.js configuration",
          "duration": 0.5023330000000215,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Project Verification Tests", "Configuration Verification"],
          "fullName": "Project Verification Tests Configuration Verification should have proper TypeScript configuration",
          "status": "passed",
          "title": "should have proper TypeScript configuration",
          "duration": 0.20470799999998235,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Project Verification Tests", "Documentation Verification"],
          "fullName": "Project Verification Tests Documentation Verification should have comprehensive documentation",
          "status": "passed",
          "title": "should have comprehensive documentation",
          "duration": 0.2317920000000413,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Project Verification Tests", "Documentation Verification"],
          "fullName": "Project Verification Tests Documentation Verification should have implementation summary (optional)",
          "status": "passed",
          "title": "should have implementation summary (optional)",
          "duration": 0.1047919999999749,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Project Verification Tests", "Documentation Verification"],
          "fullName": "Project Verification Tests Documentation Verification should have testing report (optional)",
          "status": "passed",
          "title": "should have testing report (optional)",
          "duration": 0.09000000000003183,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Project Verification Tests", "System Integration Verification"],
          "fullName": "Project Verification Tests System Integration Verification should have proper environment variable structure",
          "status": "passed",
          "title": "should have proper environment variable structure",
          "duration": 0.04920800000002146,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Project Verification Tests", "System Integration Verification"],
          "fullName": "Project Verification Tests System Integration Verification should have Vercel deployment configuration",
          "status": "passed",
          "title": "should have Vercel deployment configuration",
          "duration": 0.30387499999994816,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Project Verification Tests", "System Integration Verification"],
          "fullName": "Project Verification Tests System Integration Verification should have Inngest integration",
          "status": "passed",
          "title": "should have Inngest integration",
          "duration": 0.07791699999995672,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Project Verification Tests", "Code Quality Verification"],
          "fullName": "Project Verification Tests Code Quality Verification should have linting configuration",
          "status": "passed",
          "title": "should have linting configuration",
          "duration": 0.03920800000003055,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Project Verification Tests", "Code Quality Verification"],
          "fullName": "Project Verification Tests Code Quality Verification should have formatting and linting scripts",
          "status": "passed",
          "title": "should have formatting and linting scripts",
          "duration": 0.11591600000008384,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["Project Verification Tests", "Code Quality Verification"],
          "fullName": "Project Verification Tests Code Quality Verification should have proper project structure",
          "status": "passed",
          "title": "should have proper project structure",
          "duration": 0.1336669999999458,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1750153230704,
      "endTime": 1750153230710.1338,
      "status": "passed",
      "message": "",
      "name": "/Users/neo/Developer/mexc-sniper-bot/tests/unit/verification.test.ts"
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["/api/workflow-status"],
          "fullName": "/api/workflow-status should test workflow status service logic",
          "status": "passed",
          "title": "should test workflow status service logic",
          "duration": 0.8920000000000528,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["/api/workflow-status"],
          "fullName": "/api/workflow-status should validate workflow metrics structure",
          "status": "passed",
          "title": "should validate workflow metrics structure",
          "duration": 0.18425000000002,
          "failureMessages": [],
          "meta": {}
        },
        {
          "ancestorTitles": ["/api/workflow-status"],
          "fullName": "/api/workflow-status should validate activity entry structure",
          "status": "passed",
          "title": "should validate activity entry structure",
          "duration": 0.5094169999999849,
          "failureMessages": [],
          "meta": {}
        }
      ],
      "startTime": 1750153233925,
      "endTime": 1750153233926.5095,
      "status": "passed",
      "message": "",
      "name": "/Users/neo/Developer/mexc-sniper-bot/tests/unit/workflow-status.test.ts"
    }
  ]
}
